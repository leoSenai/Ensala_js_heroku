{"version":3,"sources":["componentes/Request.js","telas/login.js","componentes/corpo.js","telas/home.js","componentes/inputsPadroes.js","componentes/utilidadePublica.js","componentes/paginacao-plugin.js","componentes/paginacao.js","componentes/botoes.js","telas/modalidade.js","telas/professor.js","telas/areaConhecimento.js","telas/unidadeCurricular.js","telas/gerenciarEmailsProfessores.js","telas/disponibilidade.js","telas/gerenciarCompetencia.js","telas/cadastroTelaInicial.js","telas/componentes/relacionamentoUnidadeCurricular.js","telas/componentes/relacionamentoSegmentoTecnologico.js","telas/esqueciMinhaSenha.js","telas/finalizarCadastro.js","telas/alterarSenha.js","telas/ConsultaDisponibilidade.js","telas/ConsultaCompetencia.js","telas/logout.js","componentes/Autenticacao.js","App.js","serviceWorker.js","index.js","img/senai.png","img/sesi.png"],"names":["base","process","headers","Content-type","POST","path","o","f","callback","fetch","method","body","btoa","JSON","stringify","then","result","ok","json","catch","err","undefined","ERRO","console","log","status","GET","DELETE","PUT","alertaErros","EMAIL_ERRADO","alert","INSERIR_ERROR","ALTERAR_ERROR","REMOVER_ERROR","SELECIONAR_ERROR","LOGIN_ERRO","SEM_AUTORIZACAO","window","location","href","EMAIL_EM_USO_ERROR","MATRICULA_USO_ERROR","NOME_JA_CADASTRADO","ERRO_ENVIAR_EMAIL","EMAIL_NAO_ENCONTRADO","USUARIO_JA_CADASTRADO","IMPOSSIVEL_REATIVAR","text","errorMessage","Loading","_ref","loading","message","react_default","a","createElement","className","dist_default","name","color","Login","props","_this","Object","classCallCheck","this","_super","call","logar","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","token","sent","setId","professor","id","setUsuario","nome","setPermissao","permissao","setToken","setCookies","login","history","push","stop","_x","apply","arguments","state","usuario","senha","setState","target","value","user","memoriaUrl","event","toLowerCase","replaceAll","keyCode","handleSubmit","Container","Row","Col","sm","size","order","offset","onSubmit","align","src","logoSESI","alt","logoSENAI","InputGroup","Input","placeholder","onChange","bind","type","onKeyUp","handleEnter","setSenha","Button","block","onClick","cadastroProfessor","esqueciMinhaSenha","React","Component","withRouter","ContainerFade","Fade","children","BarraDePesquisaPlus","_this$props","funcPesquisa","pesquisa","indicadores","lista","filter","ret","i","length","toString","includes","e","attBarra","handle","InputGroupAddon","addonType","getPesquisa","index_esm","BarraDePesquisa","_this$props2","indicador","_this2","BarraInicialDiv","_this$props3","exec","BarraInicial","_this$props4","colspan","colSpan","Navegacao","cookieUrl","_this3","assertThisInitialized","url","Cookies","set","_this4","backPaste","Nav","vertical","react_router_dom","to","corpo_LinhaImaginaria","linha","style","width","display","justifyContent","Cabecalho","corpo_Status","Status","spin","foo","inicial","pop","texto","verificaEstadoEmail","ANDAMENTO","_this5","ACABOU","TimerEmail","_this6","verificaEmail","timer","setInterval","_this7","clearInterval","_this$state","ic","Spinner","t","ToastHeader","icon","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","padding","float","LinhaImaginaria","Fragment","ModalDetalhe","modal","modalTabela","toggleTabela","_this8","toggle","redirect","prevState","_this9","_this$props5","manha","tarde","noite","modalidade","areaConhecimento","unidadeCurricular","destaque","Modal","isOpen","ModalHeader","ModalBody","email","matricula","tipo","telefone","map","res","ModalFooter","marginTop","Table","focus","backgroundColor","key","descricao","corpo_BarraInicial","EmailDeConfirmacao","reenviar","borderColor","CampoObrigatorio","Home","corpo_Cabecalho","corpo_Navegacao","InputDefault","evento","limitSize","titulo","valor","obrigatorio","disabled","FormGroup","Label","for","corpo_CampoObrigatorio","handleChange","ArrayCompare","lista1","lista2","teste","Array","isArray","LEFT_PAGE","RIGHT_PAGE","range","from","step","Pagination","gotoPage","page","_this$props$onPageCha","onPageChanged","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","cal","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","concat","toConsumableArray","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","_this$props$totalReco","_this$props$pageLimit","aria-label","index","aria-hidden","Paginacao","listaCorrente","buttons","10","25","50","100","setPageLimit","data","slice","atualizaLista","retornaLista","calculo","botao","zerarBotoes","b10","b25","b50","b100","total","paginacao_plugin","marginLeft","fontSize","setBotoes","BotaoEnviar","enviar","outline","BotaoResetar","resetar","Modalidade","id__","nome__","descricao__","form","listaCache","barraPesquisa","inserir","buscar","Error","finally","removerLinha","_callee2","_context2","alterar","_callee3","_context3","buscarPorId","_callee4","_context4","limparFormlulario__","preencheId__","preencheNome__","preencheDescricao__","isEmpty","_callee5","_context5","_callee6","listaFiltrada","_context6","Request_Loading","corpo_ContainerFade","toggleForm","xs","inputsPadroes_InputDefault","preencheNome","preencheDescricao","botoes_BotaoResetar","limparFormlulario","botoes_BotaoEnviar","enviaFormulario","corpo_BarraDePesquisa","preencheBarraDePesquisa","paginacao","getRetornaListaCorrente","relacionar","confirm","enviaFormulario__","Professor","confirmar","email__","telefone__","permissao__","senha__","confirmar__","matricula__","tipo__","mudaSenha","inativos","toggleModalConfirmacao","tokenCadastroCache","toggleModalConfirmacaoFunc","tipoLista","PROFESSOR","novaLista","ADMINISTRADOR","preencheEmail__","preencheTelefone__","preenchePermissao__","preencheTipo__","preencheMatricula__","maskTelefone","st","equals","isEmail","_callee7","_context7","_callee8","_context8","md","preencheMatricula","preencheTipo","preencheEmail","preenchePermissao","preencheTelefone","preencheSenha","preencheConfirmar","toggleInativos","reativarProfessor","toggleMudaSenha","preencheSenha__","preencheConfirmar__","corpo_EmailDeConfirmacao","reenviarEmail","AreaConhecimento","UnidadeCurricular","GerenciarEmailsProfessores","check","assunto","corpoEmail","desativar","checkBox","enviarEmail","listaEnviar","_o","enviarTodosEmails","listaAux","item","preencheAssunto","preencheCorpoEmail","defaultChecked","checkToggle","preencheCheckbox","Disponibilidade","html","disableCheckbox","segM","segT","segN","terM","terT","terN","quaM","quaT","quaN","quiM","quiT","quiN","sexM","sexT","sexN","sabM","sabT","sabN","domM","domT","domN","attItem","permissaoStatus","buscaItem","limpaItem","limpaDescricao","disponibilidade","it","keys","compoemTabela","b","v","items","auxilar","aProps","getOwnPropertyNames","altItem","setStatbe","splice","enviaItem","_this$state$item","formatDate","textAlign","checked","Competencia","listaProfessores","unidadeCurricularListaPesquisa","unidadeCurricularListaTouch","cacheModalidade","cacheUnidadeCurricular","cacheAreaConhecimento","count","touchUnidadeCurricular","buscarProfessores","setCheck","setUnidadeCurricular","getModalidade","getAreaConhecimento","getUnidadeCurricular","limparCheck","forEach","elem","newListaArea","elemUnidade","areaconhecimento","newLista","unidadecurricular","carregamentoInicial","finalizarCarregamentoInicial","setModalidade","setAreaConhecimento","ForEachItemArray","_callee9","_context9","_callee10","_context10","list","aux","filterCheck","objectSpread2","_callee11","_context11","sort","localeCompare","borderTop","organizaListaPorNome","checkToggleModalidade","corpo_BarraInicialDiv","checkToggleAreaConhecimento","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","assign","variant","label","checkToggleUnidadeCurricular","CadastroTelaInicial","RelacionamentoUnidadeCurricular","match","voltarAreaConhecimento","atualizarUnidadeCurricular","atualizarLista","elemLista","idLista","decisao","req","marginBottom","click","RelacionamentoSegmentoTecnologico","EsqueciMinhaSenha","FinalizarCadastro","resultado","voltarTelaInicial","AlterarSenha","sucesso","baba","AlterarSenhaFail","ConsultaDisponibilidade","manhap","tardep","noitep","segunda","terca","quarta","quinta","sexta","sabado","domingo","getListaProfessores","pegaProfessor","getDisponibilidade","getAreaconhecimento","getUnidadecurricular","_step","_iterator","createForOfIteratorHelper","s","n","done","disp","substr","param","t0","dia","abrupt","setPesquisa","htmlFor","setcheck","boo","corpo_ModalDetalhe","professorInfo","ConsultaCompetencia","valueModalidade","valueAreaConhecimento","valueUnidadeCurricular","professorModalidade","professorAreaconhecimento","professorUnidadecurricular","touchModalidade","touchAreaConhecimento","amountList","listaAntiga","listNova","getProfessorModalidade","getProfessorAreaconhecimento","getProfessorUnidadecurricular","newArray","arrayVelho","arrayNovo","p","listaM","multiple","corpo_BarraDePesquisaPlus","Logout","logout","userContext","createContext","Autenticacao","inOut","get","setUserWithCookies","remove","Provider","Consumer","react_router","exact","cadastroTelaInicial","alterarSenha_AlterarSenha","alterarSenha_AlterarSenhaFail","finalizarCadastro","telas_logout","Autenticacao_RotaPrivada","home","relacionamentoUnidadeCurricular","relacionamentoSegmentoTecnologico","telas_professor","telas_modalidade","telas_areaConhecimento","telas_unidadeCurricular","gerenciarEmailsProfessores","gerenciarCompetencia","telas_ConsultaDisponibilidade","telas_ConsultaCompetencia","RotaPrivada","_React$Component2","inherits","_super2","createSuper","createClass","pathname","App","componentes_Autenticacao","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.6c04e4b9.chunk.js","sourcesContent":["import React from 'react'\nimport Spinner from 'react-spinkit'\n\nconst base = process.env.REACT_APP_SERVER_URL;\nconst door = process.env.REACT_APP_SERVER_PORT;\nconst context = process.env.REACT_APP_SERVER_CONTEXT;\nconst headers = { \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\nexport const POST = (path, o, f, callback) => {\n    return fetch(base + door + context + path, {\n        method: 'POST',\n        headers: headers,\n        body: btoa(JSON.stringify(o))\n    }).then(result => {\n        if (!result.ok) throw result;\n        if (callback) callback(result.ok)\n        return result.json();\n    }).catch(err => {\n        if (f || f === undefined) ERRO(err)\n        console.log('Status Code POST: ' + err.status);\n    })\n}\nexport const GET = (path, f) => {\n    return fetch(base + door + context + path, {\n        method: 'GET',\n        headers: headers,\n    }).then(result => {\n        if (!result.ok) throw result;\n        return result.json();\n    }).catch(err => {\n        if (f || f === undefined) ERRO(err)\n        console.log('Status Code GET: ' + err.status)\n        throw err\n    })\n}\nexport const DELETE = (path, f) => {\n    return fetch(base + door + context + path, {\n        method: 'DELETE',\n        headers: headers,\n    }).then(result => {\n        if (!result.ok) throw result;\n        return result.json();\n    }).catch(err => {\n        if (f || f === undefined) ERRO(err)\n        console.log('Status Code remover: ' + err.status);\n    })\n}\nexport const PUT = (path, o, f) => {\n    return fetch(base + door + context + path, {\n        method: 'PUT',\n        headers: headers,\n        body: btoa(JSON.stringify(o))\n    }).then(result => {\n        if (!result.ok) throw result;\n        return result.json();\n    }).catch(err => {\n        if (f || f === undefined) ERRO(err)\n        console.log('Status Code PUT: ' + err.status);\n    })\n}\n\nconst alertaErros = {\n    EMAIL_ERRADO: () => {\n        alert(\"Ops! Não podemos trocar seu e-mail.\")\n    },\n    INSERIR_ERROR: () => {\n        alert(\"Ops! Erro ao inserir.\")\n    },\n    ALTERAR_ERROR: () => {\n        alert(\"Ops! Erro ao alterar.\")\n    },\n    REMOVER_ERROR: () => {\n        alert(\"Ops! Erro ao remover.\")\n    },\n    SELECIONAR_ERROR: () => {\n        alert(\"Ops! Erro ao selecionar.\")\n    },\n    LOGIN_ERRO: () => {\n        alert(\"Usuario ou senha escrito incorretamente.\")\n    },\n    SEM_AUTORIZACAO: () => {\n        alert(\"Opa! Você não foi autorizado a usar esse recurso! Volte para tela de login.\")\n        window.location.href = \"/logout\";\n    },\n    EMAIL_EM_USO_ERROR: () => {\n        alert(\"Este email já esta sendo usado.\")\n    },\n    MATRICULA_USO_ERROR: () => {\n        alert(\"Esta matrícula já foi cadastrada.\")\n    },\n    NOME_JA_CADASTRADO: () => {\n        alert(\"Esse nome já foi cadastrado.\")\n    },\n    ERRO_ENVIAR_EMAIL: () => {\n        alert(\"Erro ao tentar enviar o e-mail.\")\n    },\n    EMAIL_NAO_ENCONTRADO: () => {\n        alert(\"Este e-mail não foi encontrado.\")\n    },\n    USUARIO_JA_CADASTRADO: () => {\n        alert(\"Seu cadastro ja foi efetuado, pode realizar seu login.\")\n        window.location.href = \"/\";\n    },\n    IMPOSSIVEL_REATIVAR: () => {\n        alert(\"É impossível reativar esse usuário, pois existe um usuário ativo com o mesmo e-mail.\")\n    }\n}\n\nexport const ERRO = (err) => {\n    if (err.status === undefined) alert(\"Ops! O servidor não está respondendo.\\nPor favor, aguarde um momento e tente novamente.\")\n    if (err.status >= 500)\n        err.text().then(errorMessage => {\n            console.log(errorMessage)\n            if (errorMessage !== undefined) alertaErros[errorMessage]()\n        })\n    else\n        if (err.status >= 400) alert(\"Ops! Erro: \" + err.status + \" \\nO servidor não conseguiu processar esta requisição.\")\n\n}\n\n\nexport const Loading = ({ loading, message }) => {\n    return loading ? (\n        <div className='overlay-content'>\n            <div className='wrapper'>\n            <Spinner name=\"three-bounce\"  color=\"white\"/>\n                <span className='message'> \n                    {message}\n                </span>\n            </div>\n        </div>\n    ) : null\n}\n\n","import React from 'react';\nimport logoSENAI from '../img/senai.png';\nimport logoSESI from '../img/sesi.png';\nimport { Row, Col, Container, Button, InputGroup, Input } from 'reactstrap';\nimport { POST } from \"../componentes/Request\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuario: \"\",\n      senha: \"\"\n    }\n  }\n  setUsuario(usuario) {\n    this.setState({ usuario: usuario.target.value });\n  }\n  setSenha(senha) {\n    this.setState({ senha: senha.target.value });\n  }\n  componentDidMount() {\n    this.props.history.push(this.props.user.memoriaUrl())\n  }\n  logar = async o => {\n    let response = await POST('login/autenticacao', o, this.token)\n\n    if (response !== undefined & response !== 0 & response !== \"\") {\n\n      await this.props.setId(response.professor.id)\n      await this.props.setUsuario(response.professor.nome)\n      await this.props.setPermissao(response.professor.permissao)\n      await this.props.setToken(response.token)\n      await this.props.setCookies()\n      await this.props.login()\n\n      this.props.history.push(\"/home\")\n    }\n  }\n\n  handleSubmit(event) {\n    var o = {};\n    o.usuario = this.state.usuario.toLowerCase().replaceAll(\" \", \"\")\n    o.senha = this.state.senha\n    this.logar(o);\n  }\n\n  handleEnter(event) { \n    if(event.keyCode === 13){\n      this.handleSubmit();\n    }\n  }\n\n  cadastroProfessor() {\n    this.props.history.push(\"/cadastroTelaInicial\")\n  }\n  esqueciMinhaSenha() {\n    this.props.history.push(\"/esqueciMinhaSenha\")\n  }\n  render() {\n    return <div className=\"body\">\n      <Container>\n        <Row>\n          <Col sm={{ size: 4, order: 1, offset: 4 }}>\n            <form className=\"linhacontainer formulario\" onSubmit={this.handleSubmit}>\n              <div align=\"center\">\n                <h1 className=\"txtLogo\">Login</h1>\n              </div>\n              <Row>\n                <Col>\n                  <img src={logoSESI} className=\"App-logo\" alt=\"logo\" />\n                </Col>\n                <Col>\n                  <img src={logoSENAI} className=\"App-logo\" alt=\"logo\" />\n                </Col>\n              </Row>\n              <InputGroup>\n                <Input placeholder=\"E-mail:\" name=\"usuario\" value={this.state.usuario} onChange={this.setUsuario.bind(this)} />\n              </InputGroup>\n              <InputGroup>\n                <Input type=\"password\" className=\"empurrar\" onKeyUp={this.handleEnter.bind(this)} name=\"senha\" placeholder=\"Senha:\" value={this.state.senha} onChange={this.setSenha.bind(this)} />\n              </InputGroup>\n              <div className=\"botaoLogin\">\n                <Button block onClick={this.handleSubmit.bind(this)} className=\"btn-login\">Entrar</Button>\n              </div>\n              <Row>\n                <Col>\n                  <button className=\"btn_telaInicial\" type=\"button\" onClick={this.cadastroProfessor.bind(this)}>Cadastre-se</button>\n                </Col>\n                <Col>\n                  <button className=\"btn_telaInicial\" type=\"button\" onClick={this.esqueciMinhaSenha.bind(this)}>Esqueci minha senha</button>\n                </Col>\n              </Row>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  }\n}\nexport default withRouter(Login)","import React from 'react'\nimport { UncontrolledPopover, Table, Modal, ModalHeader, ModalBody, ModalFooter, PopoverHeader, PopoverBody, ToastHeader, Spinner, Nav, Fade, Row, Col, Input, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\nimport logoSENAI from './../img/senai.png';\nimport logoSESI from './../img/sesi.png';\nimport { Link } from \"react-router-dom\";\nimport { GET } from \"./Request\";\nimport Cookies from 'js-cookie';\nimport { FaSearch, FaClipboard, FaPlus, FaClipboardCheck, FaPowerOff } from \"react-icons/fa\";\nclass ContainerFade extends React.Component {\n    render() {\n        return (\n            <div className=\"containerCorpo\">\n                <Fade>\n                    {this.props.children}\n                </Fade>\n            </div>\n        )\n    }\n}\n\nclass BarraDePesquisaPlus extends React.Component {\n    getPesquisa() {\n        const { funcPesquisa, pesquisa, indicadores, lista } = this.props\n\n        let novaLista = []\n        novaLista = lista.filter((value) => {\n            let ret = false;\n            for (let i = 0; i < indicadores.length; i++) {\n                ret = (value[indicadores[i]].toString().toLowerCase().includes(pesquisa.toLowerCase()) ? true : false);\n                if(ret === true){\n                    return true\n                }\n            }\n            return ret;\n        })\n        funcPesquisa(novaLista)\n    }\n    handle(e) {\n        this.props.attBarra(e.target.value.toString())\n    }\n    render() {\n        return <InputGroup className=\"w-100\">\n            <Input value={this.props.pesquisa} onChange={this.handle.bind(this)} name=\"pesquisa\" placeholder=\"Pesquisar...\" />\n            <InputGroupAddon addonType=\"append\">\n                <Button color=\"secondary\" onClick={() => this.getPesquisa()}>\n                    <FaSearch />\n                </Button>\n            </InputGroupAddon>\n        </InputGroup>\n    }\n}\n\nclass BarraDePesquisa extends React.Component {\n    getPesquisa() {\n        const { funcPesquisa, pesquisa, indicador, lista } = this.props\n\n        let novaLista = []\n        novaLista = lista.filter((value) => {\n\n            return value[indicador].toString().includes(pesquisa) ? true : false\n        })\n        funcPesquisa(novaLista)\n    }\n    handle(e) {\n        this.props.attBarra(e.target.value.toString())\n    }\n    render() {\n        return <InputGroup className=\"w-100\">\n            <Input value={this.props.pesquisa} onChange={this.handle.bind(this)} name=\"pesquisa\" placeholder=\"Pesquisar...\" />\n            <InputGroupAddon addonType=\"append\">\n                <Button color=\"secondary\" onClick={() => this.getPesquisa()}>\n                    <FaSearch />\n                </Button>\n            </InputGroupAddon>\n        </InputGroup>\n    }\n}\n\nclass BarraInicialDiv extends React.Component {\n    render() {\n        const { exec, message } = this.props\n        return exec ? (\n            <div>{message}</div>\n        ) : null\n    }\n}\n\nclass BarraInicial extends React.Component {\n    render() {\n        const { exec, message, colspan } = this.props\n        return exec ? (\n            <tr>\n                <td colSpan={colspan}>\n                    {message}\n                </td>\n            </tr>\n        ) : null\n    }\n}\n\nclass Navegacao extends React.Component {\n    cookieUrl = this.cookieUrl.bind(this)\n    async cookieUrl(url) {\n        await Cookies.set(\"ultimaPagina\", url)\n    }\n\n    render() {\n        const { backPaste } = this.props\n        return <div className=\"barraNav\">\n            <Nav vertical>\n                <div className=\"subtituloMenu\"><FaPlus />Cadastros</div>\n                <Link to={(backPaste ? backPaste : \"../\") + \"cadastro/professor\"} onClick={() => this.cookieUrl(\"../cadastro/professor\")}>Professor</Link>\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                    <Link to={(backPaste ? backPaste : \"../\") + \"../cadastro/modalidade\"} onClick={() => this.cookieUrl(\"../cadastro/modalidade\")}>Modalidade</Link>\n                    <Link to={(backPaste ? backPaste : \"../\") + \"../cadastro/areaConhecimento\"} onClick={() => this.cookieUrl(\"../cadastro/areaConhecimento\")}>Segmento Tecnológico</Link>\n                    <Link to={(backPaste ? backPaste : \"../\") + \"../cadastro/unidadeCurricular\"} onClick={() => this.cookieUrl(\"../cadastro/unidadeCurricular\")}>Unidade curricular</Link>\n                </LinhaImaginaria>\n                <div className=\"subtituloMenu\"><FaClipboardCheck />Processos</div>\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                    <Link to={(backPaste ? backPaste : \"../\") + \"processo/gerenciaremailsprofessores\"} onClick={() => this.cookieUrl(\"../processo/gerenciaremailsprofessores\")}>E-mails</Link>\n                </LinhaImaginaria>\n                <Link to={(backPaste ? backPaste : \"../\") + \"processo/disponibilidade\"} onClick={() => this.cookieUrl(\"../processo/disponibilidade\")}>Disponibilidade</Link>\n                <Link to={(backPaste ? backPaste : \"../\") + \"processo/competencia\"} onClick={() => this.cookieUrl(\"../processo/competencia\")}>Competência</Link>\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                    <div className=\"subtituloMenu\"><FaSearch />Consultas</div>\n                    <Link to={(backPaste ? backPaste : \"../\") + \"consulta/consultadisponibilidade\"} onClick={() => this.cookieUrl(\"../consulta/consultadisponibilidade\")}>Disponibilidade</Link>\n                    <Link to={(backPaste ? backPaste : \"../\") + \"consulta/consultacompetencia\"} onClick={() => this.cookieUrl(\"../consulta/consultacompetencia\")}>Competência</Link>\n                </LinhaImaginaria>\n                <hr />\n                <Link className=\"linkMenu\" to={(backPaste ? backPaste : \"../\") + \"logout\"} onClick={() => this.cookieUrl(\"../logout\")}><span style={{ width: \"80%\", display: \"flex\", justifyContent: \"center\" }}><FaPowerOff/>Sair</span></Link>\n            </Nav>\n        </div>\n    };\n}\n\nclass Cabecalho extends React.Component {\n\n    render() {\n\n        return <header className=\"cabecalho\">\n            <Row>\n                <Col>\n                    <Row style={{ width: \"382px\" }}>\n                        <Col>\n                            <Link to=\"../home\">\n                                <img src={logoSESI} className=\"App-logo\" alt=\"logo\" />\n                            </Link>\n                        </Col>\n                        <Col>\n                            <Link to=\"../home\">\n                                <img src={logoSENAI} className=\"App-logo\" alt=\"logo\" />\n                            </Link>\n                        </Col>\n                    </Row>\n                </Col>\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                    <Status />\n                </LinhaImaginaria>\n            </Row>\n        </header>\n\n    };\n}\nclass Status extends React.Component {\n    state = {\n        spin: true,\n        foo: true,\n        inicial: true,\n        pop: \"none\",\n        texto: \"\"\n    }\n    componentDidMount() {\n        this.verificaEmail()\n        this.timer = setInterval(\n            () => {\n                this.verificaEmail()\n            },\n            5000\n        );\n    }\n    verificaEmail() {\n        GET(\"gerenciarEmails/verificarEmails\", false)\n            .then(response => {\n                if (response === undefined) response = \"ERRO\"\n                this.TimerEmail(response)\n            })\n    }\n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n\n    verificaEstadoEmail = {\n        ANDAMENTO: () => {\n            this.setState({\n                spin: true,\n                foo: false,\n                texto: \"Em andamento.\"\n            })\n        },\n        ACABOU: () => {\n            this.setState({\n                spin: false,\n                foo: true,\n                texto: \"Sem atividade.\"\n            })\n        },\n        ERRO: () => {\n            this.setState({\n                spin: false,\n                foo: false,\n                texto: \"Problemas com a conexão, aguarde um momento.\"\n            })\n        }\n    }\n\n    TimerEmail = (f) => {\n        if (f !== undefined) this.setState({ inicial: false })\n        this.verificaEstadoEmail[f]()\n    }\n    render() {\n        const { foo, spin, inicial, texto } = this.state\n        const ic = spin ? <Spinner size=\"sm\" color=\"success\" /> : null\n        const f = foo ? \"statusGreen\" : \"statusOrange\"\n        const t = !foo && !spin ? \"statusRed\" : null\n        const color = \"status \" + (inicial ? \"statusGray\" : (t ? t : f))\n\n        return (\n            <ToastHeader id=\"PopoverLegacy\" icon={ic} >\n                <div className={color} /> E-mails\n                <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\n                    <PopoverHeader>Situação</PopoverHeader>\n                    <PopoverBody>\n                        <ul style={{ padding: \"0\" }} >\n                            <li style={{ padding: \"0\", display: \"inline\", float: \"left\" }}>{color.includes(\"statusGray\") ? \"...\" : texto}</li>\n                        </ul>\n                    </PopoverBody>\n                </UncontrolledPopover>\n            </ToastHeader>\n\n        )\n    }\n}\n\nclass LinhaImaginaria extends React.Component {\n    render() {\n        return this.props.permissao === this.props.linha ? (<>{this.props.children}</>) : null\n    }\n}\n\nclass ModalDetalhe extends React.Component {\n    state = {\n        modal: false,\n        modalTabela: false\n    }\n    toggleTabela = this.toggleTabela.bind(this)\n    toggle = this.toggle.bind(this)\n    redirect = (id) => {\n        this.props.redirect(id)\n        this.toggle(this.props.toggle)\n    }\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n    toggleTabela() {\n        this.setState(prevState => ({\n            modalTabela: !prevState.modalTabela\n        }));\n    }\n    render() {\n        const { professor, manha, tarde, noite, modalidade, areaConhecimento, unidadeCurricular, id, destaque } = this.props\n        return <>\n            <FaClipboard onClick={() => this.redirect(id)} />\n\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>Detalhe</ModalHeader>\n                <ModalBody>\n                    <div className=\"disponivelDescriptionBox\">\n                        <div className=\"flexbox\">\n                            <div className=\"w-25\">\n                                Nome:\n                            </div>\n                            <div className=\"w-75\">\n                                {professor.nome}\n                            </div>\n                        </div>\n                        <div className=\"flexbox\">\n                            <div className=\"w-25\">\n                                E-mail:\n                            </div>\n                            <div className=\"w-75\">\n                                {professor.email}\n                            </div>\n                        </div>\n                        <div className=\"flexbox\">\n                            <div className=\"w-25\">\n                                Matrícula:\n                            </div>\n                            <div className=\"w-75\">\n                                {professor.matricula}\n                            </div>\n                        </div>\n                        <div className=\"flexbox\">\n                            <div className=\"w-25\">\n                                Tipo:\n                            </div>\n                            <div className=\"w-75\">\n                                {professor.tipo}\n                            </div>\n                        </div>\n                        <div className=\"flexbox\">\n                            <div className=\"w-25\">\n                                Telefone:\n                            </div>\n                            <div className=\"w-75\">\n                                {professor.telefone}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"disponivelBox\">\n                        <b>Disponível</b>\n                        <div className=\"flexbox manha\">\n                            <div className=\"w-25 fontSmall \">\n                                Manha:\n                            </div>\n                            <div className=\"w-75\">\n                                {manha}\n                            </div>\n                        </div>\n                        <div className=\"flexbox tarde\">\n                            <div className=\"w-25 fontSmall\">\n                                Tarde:\n                            </div>\n                            <div className=\"w-75\">\n                                {tarde}\n                            </div>\n                        </div>\n                        <div className=\"flexbox noite\">\n                            <div className=\"w-25 fontSmall\">\n                                Noite:\n                            </div>\n                            <div className=\"w-75\">\n                                {noite}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"disponivelBox\">\n                        <b>Competências</b>\n                        <div className=\"flexbox competencia\">\n                            <div className=\"w-25 fontSmall \">\n                                Modalidade:\n                            </div>\n                            <div className=\"w-75\">\n                                {modalidade.map((res, i) => {\n                                    if ((i + 1) === modalidade.length) {\n                                        return res\n                                    }\n                                    return res + \", \"\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"flexbox competencia\">\n                            <div className=\"w-25 fontSmall\">\n                                Segmento tecnológico:\n                            </div>\n                            <div className=\"w-75\">\n                                {areaConhecimento.map((res, i) => {\n                                    if ((i + 1) === areaConhecimento.length) {\n                                        return res\n                                    }\n                                    return res + \", \"\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"flexbox competencia\">\n                            <div className=\"w-25 fontSmall\">\n                                Unidade curricular:\n                            </div>\n                            <div className=\"w-75\">\n                                <button className={\"btn_modal_unidadeCurricular\"} onClick={this.toggleTabela}>ver lista</button>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </ModalBody>\n                <ModalFooter>\n                    <button onClick={this.toggle}>Fechar</button>\n                </ModalFooter>\n            </Modal>\n            <Modal style={{ width: \"100%\" }} isOpen={this.state.modalTabela} toggle={this.toggleTabela}>\n                <ModalHeader toggle={this.toggleTabela}>Unidade curricular do {professor.nome}</ModalHeader>\n                <ModalBody>\n                    <div style={{ marginTop: 0 }} className=\"div_tabela\">\n                        <Table >\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Nome</th>\n                                    <th>Observação</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {unidadeCurricular.map(o => {\n                                    let focus = {}\n                                    if (destaque !== undefined && destaque !== null) {\n                                        for (let i in destaque) {\n                                            if (o.id === destaque[i].id) {\n                                                focus = { backgroundColor: '#0047B6', color: \"white\" }\n                                                break\n                                            }\n                                        }\n                                    }\n                                    return (\n                                        <tr style={focus} key={o.id}>\n                                            <td>{o.id}</td>\n                                            <td>{o.nome}</td>\n                                            <td>{o.descricao === \"\" ? \" - \" : o.descricao}</td>\n                                        </tr>\n                                    );\n                                })}\n                                {\n                                    unidadeCurricular.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                                }\n                            </tbody>\n                        </Table>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <button onClick={this.toggleTabela}>Fechar</button>\n                </ModalFooter>\n            </Modal>\n        </>\n    }\n}\n\nconst EmailDeConfirmacao = (props) => {\n    const { toggle, callback, email, reenviar } = props\n    return (<>\n        <div id=\"EmailDeConfirmacao\">\n            <Modal isOpen={toggle} toggle={() => callback(false, false)}>\n                <ModalHeader>Confirmação de e-mail</ModalHeader>\n                <ModalBody>\n                    <div className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\n                        <p className=\"p_alerta\">Enviamos um e-mail para este endereço: {email}</p>\n                        <p className=\"p_alerta\">{props.children}</p>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <button onClick={() => reenviar(false, false)}>Reenviar e-mail</button>\n                    <button onClick={() => callback(false, false)}>Fechar</button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    </>)\n}\n\nclass CampoObrigatorio extends React.Component {\n    render() {\n        return <>\n            <span style={{ color: \"red\" }}>*</span>\n        </>\n    }\n}\n\nexport { EmailDeConfirmacao, BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa, BarraDePesquisaPlus, ModalDetalhe, CampoObrigatorio, BarraInicialDiv }\n","import React from \"react\";\nimport { Row, Col, Fade } from \"reactstrap\";\nimport { Navegacao, Cabecalho } from \"../componentes/corpo\"\nimport { withRouter } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nclass Home extends React.Component {\n  componentDidMount() {\n    Cookies.set(\"ultimaPagina\", \"/home\")\n  }\n  render() {\n    return <div>\n      <div>\n        <Cabecalho user={this.props.user} />\n      </div>\n      <div className=\"corpo\">\n        <Row>\n          <Navegacao user={this.props.user} />\n          <Fade>\n            <div className=\"containerCorpo\">\n              <Col>\n                <div className=\"titulo\">\n                  <h1>Bem vindo!</h1>\n                </div>\n              </Col>\n            </div>\n          </Fade>\n        </Row>\n      </div>\n    </div>\n  };\n}\n\nexport default withRouter(Home);\n","import React from \"react\"\nimport {\n    Input, Label, FormGroup\n} from \"reactstrap\";\nimport { CampoObrigatorio } from \"../componentes/corpo\"\nexport default class InputDefault extends React.Component {\n    handleChange(e) {\n        if(this.props.size > 0 && this.props.size !== undefined && this.props.size !== null)\n            this.props.evento(e.target.value.toString().limitSize(this.props.size))\n        else\n            this.props.evento(e.target.value.toString())\n    }\n\n    render() {\n        const { nome, titulo, tipo, valor, descricao, obrigatorio, disabled } = this.props\n        return (\n            <FormGroup className=\"inputCheio\">\n                <Label for={nome}>{titulo} {obrigatorio ? <CampoObrigatorio /> : \"\"}</Label>\n                <Input onChange={this.handleChange.bind(this)} type={tipo}\n                    value={valor} id={nome} disabled={disabled} name={nome} placeholder={descricao}>{this.props.children}</Input>\n            </FormGroup>\n        )\n    }\n}","\nexport function ObjIsEmpty(o) { return Object.keys(o).length === 0 }\nexport function ObjIsEquivalent(a, b) {\n    let aProps = Object.getOwnPropertyNames(a);\n    let bProps = Object.getOwnPropertyNames(b);\n    if (aProps.length !== bProps.length) return false;\n\n    for (let i = 0; i < aProps.length; i++) {\n        if (a[aProps[i]] !== b[aProps[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport const ArrayCompare = (lista1, lista2) => {\n    let teste = true;\n    if(!Array.isArray(lista1)) {\n        return null\n    }\n    if(!Array.isArray(lista2)){\n        return null\n    } \n    for (let i = 0; i < lista1.length; i++) {\n        if (lista1[i] !== lista2[i]) {\n            teste = false\n            break\n        }\n    }\n    if (teste) {\n\n        for (let i = 0; i < lista2.length; i++) {\n            if (lista1[i] !== lista2[i]) {\n                teste = false\n                break\n            }\n        }\n    }\n    return teste\n}","import React, { Component } from \"react\";\n\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n\n    this.pageNeighbours =\n      typeof pageNeighbours === \"number\"\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1,pageLimit: this.pageLimit,totalRecords:this.pageLimit, totalPages:this.totalPages };\n\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  componentDidUpdate(){\n    const { totalRecords = null, pageLimit = 30 } = this.props;\n    \n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n    if(this.totalPages < this.state.currentPage){\n      this.setState({\n        currentPage: this.totalPages\n      })\n      this.gotoPage(this.state.currentPage)\n    }\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = (page, evt) => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    const cal = (this.state.currentPage - this.pageNeighbours * 2 - 1)\n    this.gotoPage(cal === 0 ? 1 : cal);\n  };\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    const cal = (this.state.currentPage + this.pageNeighbours * 2 + 1)\n    this.gotoPage(cal > this.totalPages ? this.totalPages : cal);\n  };\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      let pages = [];\n\n      const leftBound = currentPage - pageNeighbours;\n      const rightBound = currentPage + pageNeighbours;\n      const beforeLastPage = totalPages - 1;\n\n      const startPage = leftBound > 2 ? leftBound : 2;\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\n\n      pages = range(startPage, endPage);\n\n      const pagesCount = pages.length;\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\n\n      const leftSpill = startPage > 2;\n      const rightSpill = endPage < beforeLastPage;\n\n      const leftSpillPage = LEFT_PAGE;\n      const rightSpillPage = RIGHT_PAGE;\n\n      if (leftSpill && !rightSpill) {\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\n        pages = [leftSpillPage, ...extraPages, ...pages];\n      } else if (!leftSpill && rightSpill) {\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\n        pages = [...pages, ...extraPages, rightSpillPage];\n      } else if (leftSpill && rightSpill) {\n        pages = [leftSpillPage, ...pages, rightSpillPage];\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  render() {\n    if (!this.totalRecords) return null;\n\n    if (this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <button\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </button>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <button\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </button>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? \" active\" : \"\"\n                  }`}\n                >\n                  <button\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={e => this.handleClick(page, e)}\n                  >\n                    {page}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport Pagination from \"./paginacao-plugin\";\nimport { ArrayCompare } from \"./utilidadePublica\";\n\nclass Paginacao extends React.Component {\n    state = {\n        lista: [],\n        listaCorrente: [],\n        currentPage: 1,\n        totalPages: null,\n        pageLimit: 10,\n        buttons: {\n            10: true,\n            25: false,\n            50: false,\n            100: false,\n        }\n    }\n    setPageLimit = (pageLimit) => {\n        this.setState({\n            pageLimit\n        })\n    }\n    onPageChanged = data => {\n        const { lista } = this.state;\n        const { currentPage, totalPages, pageLimit } = data;\n        if (lista.length > 0) {\n            const offset = (currentPage - 1) * pageLimit;\n            const listaCorrente = lista.slice(offset, offset + pageLimit);\n            this.setState({ listaCorrente });\n        }\n        this.setState({ currentPage, totalPages });\n    };\n    componentDidUpdate() {\n        if (!ArrayCompare(this.props.lista, this.state.lista)) {\n            this.setState({ lista: this.props.lista })\n        }\n        this.atualizaLista()\n        this.props.retornaLista(this.props.lista.length > 0 ? this.state.listaCorrente : [])\n    }\n\n    atualizaLista() {\n        const { lista } = this.state;\n        const { currentPage, pageLimit } = this.state;\n        const calculo = (currentPage - 1) * pageLimit\n        const offset = calculo <= 0 ? 0 : calculo\n        if (this.props.lista.length > 0) {\n            const listaCorrente = lista.slice(offset, offset + pageLimit);\n            if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n                this.setState({ listaCorrente });\n                return true\n            }\n        }\n        return false\n    }\n\n    async setBotoes(botao) {\n        await this.zerarBotoes()\n        let { buttons } = this.state\n        buttons[botao] = true\n        this.setState({ buttons })\n    }\n\n    zerarBotoes() {\n        this.setState({\n            buttons: {\n                10: false,\n                25: false,\n                50: false,\n                100: false,\n            }\n        })\n    }\n\n    render() {\n\n        const { buttons } = this.state\n\n        const b10 = buttons[10]\n        const b25 = buttons[25]\n        const b50 = buttons[50]\n        const b100 = buttons[100]\n\n        return <div className=\"paginacao\" id=\"paginacao\">\n            {\n                (this.props.total === 0) ? null :\n                    <Pagination\n                        totalRecords={this.props.total}\n                        pageLimit={this.state.pageLimit}\n                        pageNeighbours={4}\n                        onPageChanged={this.onPageChanged}\n                    />\n            }\n            <div className=\"limitePaginacao\" style={{ marginLeft: \"15px\" }}>\n                <span style={{ fontSize: \"11px\", color: \"rgba(0,0,0,.5)\" }}>Nº Itens &nbsp;</span>\n                <ul className=\"pagination\">\n                    <li className={\"page-item \"+(b10 ? \"act\" : \"\")} onClick={() => this.setBotoes(10)}><button className=\"page-link\" onClick={() => this.setPageLimit(10)}>10</button></li>\n                    <li className={\"page-item \"+(b25 ? \"act\" : \"\")} onClick={() => this.setBotoes(25)}><button className=\"page-link\" onClick={() => this.setPageLimit(25)}>25</button></li>\n                    <li className={\"page-item \"+(b50 ? \"act\" : \"\")} onClick={() => this.setBotoes(50)}><button className=\"page-link\" onClick={() => this.setPageLimit(50)}>50</button></li>\n                    <li className={\"page-item \"+(b100 ? \"act\" : \"\")} onClick={() => this.setBotoes(100)}><button className=\"page-link\" onClick={() => this.setPageLimit(100)}>100</button></li>\n                </ul>\n            </div>\n        </div>\n\n    }\n}\n\nexport default Paginacao","import React from \"react\"\nimport {\n    Button\n} from \"reactstrap\";\n\nclass BotaoEnviar extends React.Component {\n    handleClick(event) {\n        event.preventDefault()\n        this.props.enviar()\n    }\n    render() {\n        return (\n            <Button outline type=\"button\" onClick={this.handleClick.bind(this)} color=\"success\" size=\"sm\" className=\"Enviar\" >Enviar</Button>\n        )\n    }\n}\n\nclass BotaoResetar extends React.Component {\n    handleClick(event) {\n        event.preventDefault()\n        this.props.resetar()\n    }\n    render() {\n        return (\n            <Button outline type=\"reset\" onClick={this.handleClick.bind(this)} color=\"secondary\" size=\"sm\" className=\"Limpar\" >Limpar</Button>\n        )\n    }\n}\n\nexport { BotaoEnviar, BotaoResetar }","import React from \"react\";\nimport {\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\nimport {\n  withRouter\n} from \"react-router-dom\";\nclass Modalidade extends React.Component {\n  state = {\n    id: \"\",\n    nome: \"\",\n    descricao: \"\",\n    id__: \"\",\n    nome__: \"\",\n    descricao__: \"\",\n    loading: false,\n    modal: false,\n    inicial: true,\n    form: \"none\",\n    listaCorrente: [],\n    listaCache: [],\n    lista: [],\n    barraPesquisa: \"\"\n  }\n  token = this.props.user.token\n  toggle = this.toggle.bind(this);\n\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n  //fields inserir\n  preencheNome(nome) { this.setState({ nome }) }\n  preencheDescricao(descricao) { this.setState({ descricao }) }\n  limparFormlulario() {\n    this.setState({\n      nome: \"\",\n      descricao: \"\"\n    })\n  }\n  //fields alterar\n  preencheId__(id__) { this.setState({ id__ }) }\n  preencheNome__(nome__) { this.setState({ nome__ }) }\n  preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\n  limparFormlulario__() {\n    this.setState({\n      nome__: \"\",\n      descricao__: \"\"\n    })\n  }\n\n  componentDidMount() { this.buscar(); }\n  // inserir\n  inserir = async o => {\n    this.setState({ loading: true })\n    await POST(\"modalidade/inserir/\" + this.token, o)\n    this.buscar();\n  }\n  enviaFormulario(event) {\n    if (this.state.nome.isEmpty()) {\n      alert(\"Insira o nome para enviar\")\n      return\n    }\n    let o = {};\n    o.descricao = this.state.descricao;\n    o.nome = this.state.nome;\n    this.inserir(o);\n  }\n  // atualizar\n  buscar = () => {\n    // segundo atualiza <----------------------------\n    GET(\"modalidade/listar/\" + this.token)\n      .then(response => {\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n        this.setState({\n          lista: response,\n          listaCache: response,\n          inicial: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({\n          lista: [],\n          listaCache: [],\n          inicial: true\n        })\n      }).finally(() => {\n        this.setState({ loading: false })\n      })\n  }\n  \n  // remover\n  removerLinha = async (id) => {\n    this.setState({ loading: true })\n    await DELETE(\"modalidade/remover/\" + id + \"/\" + this.token)\n    this.buscar();\n  }\n  //alterarF\n  enviaFormulario__(event) {\n    if (this.state.nome__.isEmpty()) {\n      alert(\"Insira o nome para enviar\")\n      return;\n    }\n    let o = {};\n    o.descricao = this.state.descricao__;\n    o.nome = this.state.nome__;\n    o.id = this.state.id__;\n    this.alterar(o);\n  }\n  alterar = async o => {\n    this.setState({ loading: true })\n    await PUT(\"modalidade/alterar/\" + this.token, o)\n    this.setState({ modal: false })\n    this.buscar();\n  }\n  buscarPorId = async (id) => {\n    this.limparFormlulario__();\n    // segundo atualiza <----------------------------\n    this.setState({ loading: true })\n    let response = await GET(\"modalidade/buscar/\" + id + \"/\" + this.token)\n    this.preencheId__(response.id)\n    this.preencheNome__(response.nome)\n    this.preencheDescricao__(response.descricao)\n    this.setState({\n      modal: true\n    })\n    this.setState({ loading: false })\n  }\n  //modal\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  toggleForm() {\n    if (this.state.form === \"none\") {\n      this.setState(prevState => ({\n        form: \"block\"\n      }));\n    }\n    if (this.state.form === \"block\") {\n      this.setState(prevState => ({\n        form: \"none\"\n      }));\n    }\n  }\n\n  async getRetornaListaCorrente(listaCorrente) {\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n      await this.setState({ listaCorrente });\n    }\n\n  }\n\n  async barraPesquisa(listaFiltrada) {\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n      await this.setState({\n        lista: listaFiltrada\n      })\n    }\n  }\n\n  relacionar(id) {\n    this.props.history.push(\"/relacionamentoSegmentoTecnologico/\" + id + \"/\" + this.token);\n  }\n  render() {\n    const { loading, nome__, descricao__, nome, descricao } = this.state\n\n    return <div>\n      <Loading loading={loading} message='Carregando ...' />\n      <div>\n        <Cabecalho user={this.props.user} />\n      </div>\n      <div className=\"corpo\">\n        <Row>\n          <Navegacao user={this.props.user} />\n          <ContainerFade>\n            <Row>\n              <div className=\"titulo\">\n                <h1>Modalidade</h1>\n              </div>\n            </Row>\n            <div className=\"cadastro\">\n              <Container>\n                <Button outline onClick={this.toggleForm.bind(this)}>Formulário</Button>\n                <Col style={{ display: this.state.form }}>\n                  <form>\n                    <Row>\n                      <Col xs={{ size: 6, offset: 3 }}>\n                        <Col>\n                          <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                        </Col>\n                        <Col>\n                          <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                        </Col>\n                        <Col>\n                          <div className=\"botao\" align=\"right\">\n                            <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\n                            <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                          </div>\n                        </Col>\n                      </Col>\n                    </Row>\n                  </form>\n                </Col>\n              </Container>\n            </div>\n            <div className=\"div_tabela\">\n              <div className=\"barra_menu\">\n                <div className=\"w-50\">\n                  <BarraDePesquisa\n                    funcPesquisa={this.barraPesquisa.bind(this)}\n                    pesquisa={this.state.barraPesquisa}\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\n                    indicador=\"nome\"\n                    lista={this.state.listaCache} />\n                </div>\n                <div className=\"w-50\">\n\n                  <Paginacao\n                    lista={this.state.lista}\n                    total={this.state.lista.length}\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\n                  />\n                </div>\n              </div>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Nome</th>\n                    <th>Observação</th>\n                    <th className=\"acao\" colSpan='3' width=\"5%\">Ação</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.listaCorrente.map(o => {\n                    return (\n                      <tr key={o.id}>\n                        <td>{o.id}</td>\n                        <td>{o.nome}</td>\n                        <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\n                        <td className=\"acao\" ><Button onClick={() => this.relacionar(o.id)}>Relacionar</Button></td>\n                        <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\n                        <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\n                      </tr>\n                    );\n                  })}\n                  {\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                  }\n                </tbody>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\n                  <form>\n                    <ModalBody>\n                      <Row>\n                        <Col>\n                          <Col>\n                            <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                          </Col>\n                          <Col>\n                            <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                          </Col>\n                        </Col>\n                      </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\n                    </ModalFooter>\n                  </form>\n                </Modal>\n              </Table>\n            </div>\n          </ContainerFade>\n        </Row>\n      </div>\n    </div>\n  };\n}\n\nexport default withRouter(Modalidade)\n\n","import React from \"react\";\nimport {\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter,\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\nimport { EmailDeConfirmacao, BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\"\n\nclass Professor extends React.Component {\n  state = {\n    nome: \"\",\n    email: \"\",\n    telefone: \"\",\n    permissao: \"\",\n    senha: \"\",\n    confirmar: \"\",\n    matricula: \"\",\n    tipo: \"\",\n\n    id__: \"\",\n    nome__: \"\",\n    email__: \"\",\n    telefone__: \"\",\n    permissao__: \"\",\n    senha__: \"\",\n    confirmar__: \"\",\n    matricula__: \"\",\n    tipo__: \"\",\n\n    loading: false,\n    modal: false,\n    inicial: true,\n    form: \"none\",\n    mudaSenha: \"none\",\n\n    lista: [],\n    listaCorrente: [],\n    listaCache: [],\n    barraPesquisa: \"\",\n    inativos: \"ATIVO\",\n    toggleModalConfirmacao: false,\n    tokenCadastroCache: \"\"\n  }\n  token = this.props.user.token\n  toggle = this.toggle.bind(this)\n\n\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n  //fields inserir\n  preencheNome(nome) { this.setState({ nome }) }\n  preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\n  preencheTelefone(telefone) { this.setState({ telefone: telefone.maskTelefone() }) }\n  preenchePermissao(permissao) { this.setState({ permissao }) }\n  preencheSenha(senha) { this.setState({ senha }) }\n  preencheConfirmar(confirmar) { this.setState({ confirmar }) }\n  preencheMatricula(matricula) { this.setState({ matricula }) }\n  preencheTipo(tipo) { this.setState({ tipo }) }\n  limparFormlulario() {\n    this.setState({\n      nome: \"\",\n      email: \"\",\n      telefone: \"\",\n      permissao: \"\",\n      senha: \"\",\n      confirmar: \"\",\n      matricula: \"\",\n      tipo: \"\"\n    })\n  }\n  //fields alterar\n  preencheId__(id__) { this.setState({ id__: id__.toString() }) }\n  preencheNome__(nome__) { this.setState({ nome__ }) }\n  preencheEmail__(email__) { this.setState({ email__: email__.toLowerCase().replaceAll(\" \", \"\") }) }\n  preencheTelefone__(telefone__) { this.setState({ telefone__: telefone__.maskTelefone() }) }\n  preenchePermissao__(permissao__) { this.setState({ permissao__ }) }\n  preencheSenha__(senha__) { this.setState({ senha__ }) }\n  preencheConfirmar__(confirmar__) { this.setState({ confirmar__ }) }\n  preencheMatricula__(matricula__) { this.setState({ matricula__ }) }\n  preencheTipo__(tipo__) { this.setState({ tipo__ }) }\n  limparFormlulario__() {\n    this.setState({\n      nome__: \"\",\n      email__: \"\",\n      telefone__: \"\",\n      permissao__: \"\",\n      senha__: \"\",\n      confirmar__: \"\",\n      matricula__: \"\",\n      tipo__: \"\"\n    })\n  }\n\n  componentDidMount() { this.buscar() }\n  // inserir\n  inserir = async o => {\n    this.setState({ loading: true });\n    await POST(\"professor/inserirProfessor/\" + this.token + \"/\" + this.props.user.id, o, undefined, (ok) => {\n      this.toggleModalConfirmacaoFunc(true)\n    })\n      .then(response => {\n        this.setState({\n          tokenCadastroCache: response\n        })\n      })\n      .finally(() => {\n        this.buscar();\n      })\n  }\n\n  async reenviarEmail() {\n    await GET(\"professor/enviarEmailCadastro/\" + this.state.tokenCadastroCache).then(() => {\n      alert(\"Verifique sua caixa de entrada e pasta de span, isso pode levar alguns minutos.\")\n    })\n  }\n\n  enviaFormulario(event) {\n    let st = this.state\n    if (\n      !st.nome.isEmpty() &&\n      !st.email.isEmpty() &&\n      (\n        (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\n        st.telefone.isEmpty()\n      ) &&\n      (!st.permissao.isEmpty() && !st.permissao.equals(\"SELECIONE\")) &&\n      (!st.tipo.isEmpty() && !st.tipo.equals(\"SELECIONE\")) &&\n      !st.senha.isEmpty() &&\n      !st.confirmar.isEmpty()\n    ) {\n      if (st.email.isEmail()) {\n        if (st.senha.length > 4) {\n          if (st.senha.equals(st.confirmar)) {\n            let o = {};\n            o.nome = st.nome;\n            o.email = st.email;\n            o.tipo = st.tipo;\n            o.matricula = st.matricula;\n            o.telefone = st.telefone;\n            o.permissao = st.permissao;\n            o.senha = st.senha;\n            this.inserir(o);\n          } else alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\")\n        } else alert(\"A senha precisa ter pelo menos 5 letras, e no máximo 10 letras.\")\n      } else alert(\"Digite um e-mail válido.\")\n    } else alert(\"Insira os dados para enviar\")\n\n  }\n  // atualizar\n\n  tipoLista = {\n    PROFESSOR: () => {\n      GET(\"professor/buscar/\" + this.props.user.id + \"/\" + this.token)\n        .then(response => {\n          let o = {}\n          let novaLista = []\n          o.id = response.id\n          o.nome = response.nome\n          o.email = response.email\n          o.telefone = response.telefone\n          o.permissao = response.permissao\n\n          novaLista.push(o)\n          this.setState({\n            lista: novaLista,\n            listaCache: novaLista,\n            listaCorrente: novaLista,\n            inicial: false\n          })\n        }).catch(err => {\n          console.log(err)\n          this.setState({\n            lista: [],\n            listaCache: [],\n            listaCorrente: [],\n            inicial: true\n          })\n        }).finally(() => {\n          this.setState({ loading: false })\n        })\n    },\n    ADMINISTRADOR: () => {\n      GET(\"professor/listar/\" + this.state.inativos + \"/\" + this.token)\n        .then(response => {\n          if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n          this.setState({\n            lista: response,\n            listaCache: response,\n            inicial: false\n          })\n        }).catch(err => {\n          console.log(err)\n          this.setState({\n            lista: [],\n            listaCache: [],\n            inicial: true\n          })\n        }).finally(() => {\n          this.setState({ loading: false })\n        })\n    }\n  }\n\n  buscar = () => {\n    // segundo atualiza <----------------------------\n    this.tipoLista[this.props.user.permissao]()\n  }\n  // remover\n  removerLinha = async (id) => {\n    this.setState({ loading: true });\n    await DELETE(\"professor/remover/\" + id + \"/\" + this.token)\n      .finally(response => {\n        this.buscar();\n      })\n  }\n  //alterar\n\n  enviaFormulario__(event) {\n    let st = this.state\n    if (\n      !st.nome__.isEmpty() &&\n      !st.email__.isEmpty() &&\n      (\n        (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\n        st.telefone.isEmpty()\n      ) &&\n      (!st.tipo__.isEmpty() && !st.tipo__.equals(\"SELECIONE\")) &&\n      (!st.permissao__.isEmpty() && !st.permissao__.equals(\"SELECIONE\"))\n    ) {\n      if (st.email__.isEmail()) {\n        let f = true;\n        let o = {};\n        o.id = st.id__;\n        o.nome = st.nome__;\n        o.email = st.email__;\n        o.tipo = st.tipo__;\n        o.matricula = st.matricula__;\n        o.telefone = st.telefone__;\n        o.permissao = st.permissao__;\n        if (st.mudaSenha !== \"none\") {\n          if (!st.senha__.isEmpty()) {\n            if (st.senha__.length > 4) {\n              if (st.senha__.equals(st.confirmar__)) {\n                o.senha = st.senha__;\n              } else { f = false; alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\") }\n            } else { f = false; alert(\"A senha precisa ter pelo menos 5 letras, e no máximo 10 letras.\") }\n          } else o.senha = \"\"\n        } else o.senha = \"\"\n        if (f) this.alterar(o);\n      } else alert(\"Digite um e-mail válido.\")\n    } else alert(\"Insira os dados para enviar\")\n  }\n\n  async reativarProfessor(id) {\n    this.setState({ loading: true });\n    await GET(\"professor/reativarProfessor/\" + id + \"/\" + this.token + \"/\" + this.props.user.id)\n      .finally(() => {\n        this.buscar();\n      })\n  }\n\n  alterar = async o => {\n    this.setState({ loading: true });\n    await PUT(\"professor/alterarProfessor/\" + this.token + \"/\" + this.props.user.id, o)\n      .finally(() => {\n        this.setState({ modal: false })\n        this.buscar();\n      })\n  }\n  buscarPorId = async (id) => {\n    // segundo atualiza <----------------------------\n    this.limparFormlulario__();\n    this.setState({ loading: true })\n    await GET(\"professor/buscar/\" + id + \"/\" + this.token)\n      .then(response => {\n\n        this.preencheId__(response.id)\n        this.preencheNome__(response.nome)\n        this.preencheEmail__(response.email)\n        this.preencheTelefone__(response.telefone)\n        this.preenchePermissao__(response.permissao)\n        this.preencheTipo__(response.tipo)\n        this.preencheMatricula__(response.matricula)\n\n        this.setState({\n          modal: true\n        })\n      }).finally(() => {\n        this.setState({ loading: false })\n      })\n  }\n  //modal\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  toggleForm() {\n    if (this.state.form === \"none\") {\n      this.setState(() => ({\n        form: \"block\"\n      }));\n    } else if (this.state.form === \"block\") {\n      this.setState(() => ({\n        form: \"none\"\n      }));\n    }\n  }\n  async toggleInativos() {\n    if (this.state.inativos === \"ATIVO\") {\n      await this.setState(() => ({\n        inativos: \"INATIVO\"\n      }));\n    } else if (this.state.inativos === \"INATIVO\") {\n      await this.setState(() => ({\n        inativos: \"ATIVO\"\n      }));\n    }\n    this.buscar()\n  }\n  toggleMudaSenha() {\n    if (this.state.mudaSenha === \"none\") {\n      this.setState(() => ({\n        mudaSenha: \"flex\"\n      }));\n    } else if (this.state.mudaSenha === \"flex\") {\n      this.setState(() => ({\n        mudaSenha: \"none\"\n      }));\n    }\n  }\n\n  getRetornaListaCorrente(listaCorrente) {\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n      this.setState({ listaCorrente });\n    }\n  }\n\n  async barraPesquisa(listaFiltrada) {\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n      await this.setState({\n        lista: listaFiltrada\n      })\n    }\n  }\n\n  toggleModalConfirmacaoFunc(callback) {\n    if (callback !== undefined)\n      this.setState({\n        toggleModalConfirmacao: callback,\n      });\n  }\n\n  render() {\n    const { loading, nome, email, telefone, permissao, senha, confirmar, matricula, tipo, toggleModalConfirmacao,\n      nome__, email__, telefone__, permissao__, senha__, confirmar__, matricula__, tipo__, inativos } = this.state;\n\n    return <div>\n      <Loading loading={loading} message='Carregando ...' />\n      <div>\n        <Cabecalho user={this.props.user} />\n      </div>\n      <div className=\"corpo\">\n        <Row>\n          <Navegacao user={this.props.user} />\n          <ContainerFade>\n            <Row>\n              <div className=\"titulo\">\n                <h1>Professor</h1>\n              </div>\n            </Row>\n            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n              <div className=\"cadastro\">\n                <Container>\n                  <Button outline onClick={this.toggleForm.bind(this)}>Formulário</Button>\n                  <Col style={{ display: this.state.form }}>\n                    <form>\n                      <Row>\n                        <Col xs={{ size: 8, offset: 2 }}>\n                          <Col>\n                            <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                          </Col>\n                          <Row>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault obrigatorio evento={this.preencheMatricula.bind(this)} valor={matricula} size=\"10\" tipo=\"text\" nome=\"matricula\" titulo=\"Matrícula\" descricao=\"Digite a sua matrícula\" />\n                            </Col>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault obrigatorio evento={this.preencheTipo.bind(this)} valor={tipo} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\n                                <option value=\"SELECIONE\">Selecione...</option>\n                                <option>HORISTA</option>\n                                <option>MENSALISTA</option>\n                              </InputDefault>\n                            </Col>\n                          </Row>\n                          <Col>\n                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\n                          </Col>\n                          <Row>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault obrigatorio evento={this.preenchePermissao.bind(this)} valor={permissao} tipo=\"select\" name=\"permissao\" titulo=\"Permissao\">\n                                <option value=\"SELECIONE\">Selecione...</option>\n                                <option>ADMINISTRADOR</option>\n                                <option>PROFESSOR</option>\n                              </InputDefault>\n                            </Col>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault evento={this.preencheTelefone.bind(this)} valor={telefone} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} size=\"10\" valor={senha} tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\n                            </Col>\n                            <Col md={{ size: 6 }}>\n                              <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} size=\"10\" valor={confirmar} tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\n                            </Col>\n                          </Row>\n                          <Col>\n                            <div className=\"botao\" align=\"right\">\n                              <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\n                              <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                            </div>\n                          </Col>\n                        </Col>\n                      </Row>\n                    </form>\n                  </Col>\n                </Container>\n              </div>\n            </LinhaImaginaria>\n            <div className=\"div_tabela\">\n              <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                <div className=\"barra_inatividade\">\n                  <Button outline onClick={this.toggleInativos.bind(this)}>{inativos === \"ATIVO\" ? \"Ativos\" : \"Inativos\"}</Button>\n                </div>\n                <div className=\"barra_menu\">\n                  <div className=\"w-50\">\n                    <BarraDePesquisa\n                      funcPesquisa={this.barraPesquisa.bind(this)}\n                      pesquisa={this.state.barraPesquisa}\n                      attBarra={this.preencheBarraDePesquisa.bind(this)}\n                      indicador=\"nome\"\n                      lista={this.state.listaCache} />\n                  </div>\n                  <div className=\"w-50\">\n                    <Paginacao\n                      lista={this.state.lista}\n                      total={this.state.lista.length}\n                      retornaLista={this.getRetornaListaCorrente.bind(this)}\n                    />\n                  </div>\n                </div>\n              </LinhaImaginaria>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Matrícula</th>\n                    <th>Nome</th>\n                    <th>Tipo</th>\n                    <th>Email</th>\n                    <th>Telefone</th>\n                    <th>Permissao</th>\n                    <th className=\"acao\" colSpan='2' width=\"5%\">Ação</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.listaCorrente.map(o => {\n                    return (\n                      <tr key={o.id}>\n                        <td>{o.id}</td>\n                        <td>{o.matricula}</td>\n                        <td>{o.nome}</td>\n                        <td>{o.tipo}</td>\n                        <td>{o.email}</td>\n                        <td>{o.telefone}</td>\n                        <td>{o.permissao}</td>\n                        {inativos === \"ATIVO\" ?\n                          (<>\n                            <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\n                            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                              <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja inativar esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Inativar</Button></td>\n                            </LinhaImaginaria>\n                          </>) :\n                          (<>\n                            <td className=\"acao\" ><Button onClick={() => this.reativarProfessor(o.id)}>Reativar</Button></td>\n                          </>)\n                        }\n\n                      </tr>\n                    );\n                  })}\n                  {\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                  }\n                </tbody>\n                <Loading loading={loading} message='Carregando ...' />\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\n                  <form>\n                    <ModalBody>\n                      <form>\n                        <Row>\n                          <Col xs={{ size: 12 }}>\n                            <Col>\n                              <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                            </Col>\n                            <Row>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preencheMatricula__.bind(this)} valor={matricula__} size=\"255\" tipo=\"text\" nome=\"matricula\" titulo=\"Matrícula\" descricao=\"Digite a sua matrícula\" />\n                              </Col>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preencheTipo__.bind(this)} valor={tipo__} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\n                                  <option value=\"SELECIONE\">Selecione...</option>\n                                  <option>HORISTA</option>\n                                  <option>MENSALISTA</option>\n                                </InputDefault>\n                              </Col>\n                            </Row>\n                            <Col>\n                              <InputDefault disabled obrigatorio evento={this.preencheEmail__.bind(this)} valor={email__} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\n                            </Col>\n                            <Row>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preenchePermissao__.bind(this)} valor={permissao__} tipo=\"select\" name=\"permissao\" titulo=\"Permissao\">\n                                  <option value=\"SELECIONE\">Selecione...</option>\n                                  <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                                    <option>ADMINISTRADOR</option>\n                                  </LinhaImaginaria>\n                                  <option>PROFESSOR</option>\n                                </InputDefault>\n                              </Col>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preencheTelefone__.bind(this)} valor={telefone__} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\n                              </Col>\n                            </Row>\n                            <Col>\n                              <Button outline onClick={this.toggleMudaSenha.bind(this)}>Mudar senha</Button>\n                            </Col>\n                            <div><br /></div>\n                            <Row style={{ display: this.state.mudaSenha }}>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preencheSenha__.bind(this)} valor={senha__} size=\"10\" tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\n                              </Col>\n                              <Col md={{ size: 6 }}>\n                                <InputDefault obrigatorio evento={this.preencheConfirmar__.bind(this)} valor={confirmar__} size=\"10\" tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\n                              </Col>\n                            </Row>\n                          </Col>\n                        </Row>\n                      </form>\n                    </ModalBody>\n                    <ModalFooter>\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\n                    </ModalFooter>\n                  </form>\n                </Modal>\n              </Table>\n            </div>\n          </ContainerFade>\n        </Row>\n      </div>\n      <EmailDeConfirmacao toggle={toggleModalConfirmacao} callback={this.toggleModalConfirmacaoFunc.bind(this)} email={email} reenviar={this.reenviarEmail.bind(this)}>\n        É necessário a confirmação de e-mail para prosseguir!\n      </EmailDeConfirmacao>\n    </div>\n  };\n}\n\nexport default Professor\n\n","import React from \"react\";\nimport {\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\nimport {\n  withRouter\n} from \"react-router-dom\";\n\nclass AreaConhecimento extends React.Component {\n  state = {\n    id: \"\",\n    descricao: \"\",\n    nome: \"\",\n    id__: \"\",\n    descricao__: \"\",\n    nome__: \"\",\n    loading: false,\n    modal: false,\n    inicial: true,\n    form: \"none\",\n    listaCache: [],\n    lista: [],\n    listaCorrente: [],\n    barraPesquisa: \"\"\n  }\n  token = this.props.user.token\n  toggle = this.toggle.bind(this)\n\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n  //fields inserir\n  preencheNome(nome) { this.setState({ nome }) }\n  preencheDescricao(descricao) { this.setState({ descricao }) }\n  limparFormlulario() {\n    this.setState({\n      nome: \"\",\n      descricao: \"\"\n    })\n  }\n  //fields alterar\n  preencheId__(id__) { this.setState({ id__ }) }\n  preencheNome__(nome__) { this.setState({ nome__ }) }\n  preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\n  limparFormlulario__() {\n    this.setState({\n      nome__: \"\",\n      descricao__: \"\"\n    })\n  }\n\n  async componentDidMount() {\n    await this.buscar();\n  }\n  // inserir\n  inserir = async o => {\n    this.setState({ loading: true });\n    await POST(\"areaConhecimento/inserir/\" + this.token, o)\n    this.buscar();\n  }\n  enviaFormulario(event) {\n    if (this.state.nome.isEmpty()) {\n      alert(\"Insira o nome para enviar\")\n      return\n    }\n    let o = {};\n    o.descricao = this.state.descricao\n    o.nome = this.state.nome\n    this.inserir(o);\n  }\n  // atualizar\n  buscar = async () => {\n    // segundo atualiza <----------------------------\n    await GET(\"areaConhecimento/listar/\" + this.token)\n      .then(response => {\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n        this.setState({\n          lista: response,\n          listaCache: response,\n          inicial: false,\n        })\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({\n          lista: [],\n          listaCache: [],\n          inicial: true,\n        })\n      }).finally(() => {\n        this.setState({\n          loading: false,\n        })\n      })\n\n  }\n  // remover\n  removerLinha = async (id) => {\n    this.setState({ loading: true });\n    await DELETE(\"areaConhecimento/remover/\" + id + \"/\" + this.token)\n    this.buscar();\n  }\n  //alterar\n  enviaFormulario__(event) {\n    if (this.state.nome__.isEmpty()) {\n      alert(\"Insira o nome para enviar\")\n      return\n    }\n    let o = {};\n    o.descricao = this.state.descricao__;\n    o.nome = this.state.nome__;\n    o.id = this.state.id__;\n    this.alterar(o);\n  }\n  alterar = async o => {\n    this.setState({ loading: true });\n    await PUT(\"areaConhecimento/alterar/\" + this.token, o)\n    this.setState({ modal: false })\n    this.buscar();\n  }\n  buscarPorId = async (id) => {\n    this.limparFormlulario__();\n    // segundo atualiza <----------------------------\n    this.setState({ loading: true })\n    let response = await GET(\"areaConhecimento/buscar/\" + id + \"/\" + this.token)\n    this.preencheId__(response.id)\n    this.preencheNome__(response.nome)\n    this.preencheDescricao__(response.descricao)\n    this.setState({\n      modal: true\n    })\n    this.setState({ loading: false })\n  }\n\n  relacionar(id) {\n    this.props.history.push(\"/relacionamentoUnidadeCurricular/\" + id + \"/\" + this.token);\n  }\n  //modal\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  toggleForm() {\n    if (this.state.form === \"none\") {\n      this.setState(() => ({\n        form: \"block\"\n      }));\n    }\n    if (this.state.form === \"block\") {\n      this.setState(() => ({\n        form: \"none\"\n      }));\n    }\n  }\n\n  getRetornaListaCorrente(listaCorrente) {\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n      this.setState({ listaCorrente });\n    }\n  }\n\n  async barraPesquisa(listaFiltrada) {\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n      await this.setState({\n        lista: listaFiltrada\n      })\n    }\n  }\n\n  render() {\n    const { loading, nome__, descricao__, nome, descricao } = this.state\n\n    return <div>\n      <Loading loading={loading} message='Carregando ...' />\n      <div>\n        <Cabecalho user={this.props.user} />\n      </div>\n      <div className=\"corpo\">\n        <Row>\n          <Navegacao user={this.props.user} />\n          <ContainerFade>\n            <Row>\n              <div className=\"titulo\">\n                <h1>Segmento Tecnológico</h1>\n              </div>\n            </Row>\n            <div className=\"cadastro\">\n              <Container>\n                <Button outline onClick={this.toggleForm.bind(this)}>Formulário</Button>\n                <Col style={{ display: this.state.form }}>\n                  <form>\n                    <Row>\n                      <Col xs={{ size: 6, offset: 3 }}>\n                        <Col>\n                          <InputDefault evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                        </Col>\n                        <Col>\n                          <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                        </Col>\n                        <Col>\n                          <div className=\"botao\" align=\"right\">\n                            <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\n                            <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                          </div>\n                        </Col>\n                      </Col>\n                    </Row>\n                  </form>\n                </Col>\n              </Container>\n            </div>\n            <div className=\"div_tabela\">\n              <div className=\"barra_menu\">\n                <div className=\"w-50\">\n                  <BarraDePesquisa\n                    funcPesquisa={this.barraPesquisa.bind(this)}\n                    pesquisa={this.state.barraPesquisa}\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\n                    indicador=\"nome\"\n                    lista={this.state.listaCache} />\n                </div>\n                <div className=\"w-50\">\n                  <Paginacao\n                    lista={this.state.lista}\n                    total={this.state.lista.length}\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\n                  />\n                </div>\n              </div>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Nome</th>\n                    <th>Observação</th>\n                    <th className=\"acao\" colSpan='3' width=\"5%\">Ação</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.listaCorrente.map(o => {\n                    return (\n                      <tr key={o.id}>\n                        <td>{o.id}</td>\n                        <td>{o.nome}</td>\n                        <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\n                        <td className=\"acao\" ><Button onClick={() => this.relacionar(o.id)}>Relacionar</Button></td>\n                        <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\n                        <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\n                      </tr>\n                    );\n                  })}\n\n                  {\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                  }\n                </tbody>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\n                  <form>\n                    <ModalBody>\n                      <Row>\n                        <Col>\n                          <Col>\n                            <InputDefault evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                          </Col>\n                          <Col>\n                            <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                          </Col>\n                        </Col>\n                      </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\n                    </ModalFooter>\n                  </form>\n                </Modal>\n              </Table>\n            </div>\n          </ContainerFade>\n        </Row>\n      </div>\n    </div>\n  };\n}\n\nexport default withRouter(AreaConhecimento)\n\n","import React from \"react\";\nimport {\n    Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\n\nclass UnidadeCurricular extends React.Component {\n    state = {\n        id: \"\",\n        nome: \"\",\n        descricao: \"\",\n        id__: \"\",\n        nome__: \"\",\n        descricao__: \"\",\n        loading: false,\n        modal: false,\n        inicial: true,\n        form: \"none\",\n\n        listaCache: [],\n        lista: [],\n        listaCorrente: [],\n        barraPesquisa: \"\"\n    }\n    token = this.props.user.token\n    toggle = this.toggle.bind(this);\n\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n    //fields inserir\n    preencheNome(nome) { this.setState({ nome }) }\n    preencheDescricao(descricao) { this.setState({ descricao }) }\n    limparFormlulario() {\n        this.setState({\n            nome: \"\",\n            descricao: \"\"\n        })\n    }\n    //fields alterar\n    preencheId__(id__) { this.setState({ id__ }) }\n    preencheNome__(nome__) { this.setState({ nome__ }) }\n    preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\n    limparFormlulario__() {\n        this.setState({\n            nome__: \"\",\n            descricao__: \"\"\n        })\n    }\n\n    componentDidMount() { this.buscar(); }\n    // inserir\n    inserir = async o => {\n        this.setState({ loading: true });\n        await POST(\"unidadeCurricular/inserir/\" + this.token, o)\n        this.buscar();\n    }\n    enviaFormulario(event) {\n        if (this.state.nome.isEmpty()) {\n            alert(\"Insira o nome para enviar\")\n            return\n        }\n        let o = {};\n        o.nome = this.state.nome\n        o.descricao = this.state.descricao\n        this.inserir(o);\n    }\n    // atualizar\n    buscar = () => {\n        // segundo atualiza <----------------------------\n        GET(\"unidadeCurricular/listar/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    lista: response,\n                    listaCache: response,\n                    inicial: false\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    lista: [],\n                    listaCache: [],\n                    inicial: true\n                })\n            }).finally(() => {\n                this.setState({ loading: false })\n            })\n    }\n    // remover\n    removerLinha = async (id) => {\n        this.setState({ loading: true });\n        await DELETE(\"unidadeCurricular/remover/\" + id + \"/\" + this.token)\n        this.buscar();\n    }\n    //alterar\n    enviaFormulario__(event) {\n        if (this.state.nome__.isEmpty()) {\n            alert(\"Insira o nome para enviar\")\n            return\n        }\n        let o = {};\n        o.nome = this.state.nome__;\n        o.descricao = this.state.descricao__;\n        o.id = this.state.id__;\n        this.alterar(o);\n\n    }\n    alterar = async o => {\n        this.setState({ loading: true });\n        await PUT(\"unidadeCurricular/alterar/\" + this.token, o)\n        this.setState({ modal: false })\n        this.buscar();\n    }\n    buscarPorId = async (id) => {\n        this.limparFormlulario__();\n        // segundo atualiza <----------------------------\n        this.setState({ loading: true })\n        let response = await GET(\"unidadeCurricular/buscar/\" + id + \"/\" + this.token)\n        this.preencheId__(response.id)\n        this.preencheNome__(response.nome)\n        this.preencheDescricao__(response.descricao)\n        this.setState({\n            modal: true\n        })\n        this.setState({ loading: false })\n    }\n    //modal\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n    toggleForm() {\n        if (this.state.form === \"none\") {\n            this.setState(() => ({\n                form: \"block\"\n            }));\n        }\n        if (this.state.form === \"block\") {\n            this.setState(() => ({\n                form: \"none\"\n            }));\n        }\n    }\n\n    getRetornaListaCorrente(listaCorrente) {\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n            this.setState({ listaCorrente });\n        }\n    }\n\n    async barraPesquisa(listaFiltrada) {\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n            await this.setState({\n                lista: listaFiltrada\n            })\n        }\n    }\n\n    render() {\n        const { loading, nome__, descricao__, nome, descricao } = this.state\n\n        return <div>\n            <Loading loading={loading} message='Carregando ...' />\n            <div>\n                <Cabecalho user={this.props.user} />\n            </div>\n            <div className=\"corpo\">\n                <Row>\n                    <Navegacao user={this.props.user} />\n                    <ContainerFade>\n                        <Row>\n                            <div className=\"titulo\">\n                                <h1>Unidade curricular</h1>\n                            </div>\n                        </Row>\n                        <div className=\"cadastro\">\n                            <Container>\n                                <Button outline onClick={this.toggleForm.bind(this)}>Formulário</Button>\n                                <Col style={{ display: this.state.form }}>\n                                    <form>\n                                        <Row>\n                                            <Col xs={{ size: 6, offset: 3 }}>\n                                                <Col>\n                                                    <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                                                </Col>\n                                                <Col>\n                                                    <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                                                </Col>\n                                                <Col>\n                                                    <div className=\"botao\" align=\"right\">\n                                                        <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\n                                                        <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                                                    </div>\n                                                </Col>\n                                            </Col>\n                                        </Row>\n                                    </form>\n                                </Col>\n                            </Container>\n                        </div>\n                        <div className=\"div_tabela\">\n                            <div className=\"barra_menu\">\n                                <div className=\"w-50\">\n                                    <BarraDePesquisa\n                                        funcPesquisa={this.barraPesquisa.bind(this)}\n                                        pesquisa={this.state.barraPesquisa}\n                                        attBarra={this.preencheBarraDePesquisa.bind(this)}\n                                        indicador=\"nome\"\n                                        lista={this.state.listaCache} />\n                                </div>\n                                <div className=\"w-50\">\n                                    <Paginacao\n                                        lista={this.state.lista}\n                                        total={this.state.lista.length}\n                                        retornaLista={this.getRetornaListaCorrente.bind(this)}\n                                    />\n                                </div>\n                            </div>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Nome</th>\n                                        <th>Observação</th>\n                                        <th className=\"acao\" colSpan='2' width=\"5%\">Ação</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.listaCorrente.map(o => {\n                                        return (\n                                            <tr key={o.id}>\n                                                <td>{o.id}</td>\n                                                <td>{o.nome}</td>\n                                                <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\n                                                <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\n                                                <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\n                                            </tr>\n                                        );\n                                    })}\n                                    {\n                                        this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                                    }\n                                </tbody>\n                                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                                    <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\n                                    <form>\n                                        <ModalBody>\n                                            <Row>\n                                                <Col>\n                                                    <Col>\n                                                        <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                                                    </Col>\n                                                    <Col>\n                                                        <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observação\" descricao=\"Descreva...\" />\n                                                    </Col>\n                                                </Col>\n                                            </Row>\n                                        </ModalBody>\n                                        <ModalFooter>\n                                            <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\n                                            <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\n                                        </ModalFooter>\n                                    </form>\n                                </Modal>\n                            </Table>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </div >\n    };\n}\n\nexport default UnidadeCurricular\n\n","import React from \"react\";\nimport {\n  Table, Container, Row, Button, Col, Input\n} from \"reactstrap\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { GET, POST } from \"../componentes/Request\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\nimport InputDefault from \"../componentes/inputsPadroes\";\n\nclass GerenciarEmailsProfessores extends React.Component {\n  state = {\n    check: \"\",\n    assunto: \"\",\n    corpoEmail: \"\",\n    loading: false,\n    modal: false,\n    form: \"none\",\n    desativar: true,\n    checkBox: true,\n\n    lista: [],\n    listaCorrente: [],\n    listaCache: [],\n    barraPesquisa: \"\"\n\n  }\n  token = this.props.user.token\n\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n  //fields inserir\n  preencheAssunto(assunto) { this.setState({ assunto }) }\n  preencheCorpoEmail(corpoEmail) { this.setState({ corpoEmail }) }\n  limparFormlulario() {\n    this.setState({\n      assunto: \"\",\n      corpoEmail: \"\"\n    })\n  }\n\n  preencheCheckbox(id, check) {\n    let lista = this.state.lista\n    let novaLista = []\n    for (let i in lista) {\n      let o = {};\n      o.id = lista[i].id\n      o.matricula = lista[i].matricula\n      o.tipo = lista[i].tipo\n      o.nome = lista[i].nome\n      o.email = lista[i].email\n      if (lista[i].id === id) {\n        if (check === false) {\n          o.check = true\n        } else if (check === true) {\n          o.check = false\n        }\n      } else o.check = lista[i].check\n      novaLista.push(o)\n    }\n    this.setState({ lista: novaLista })\n  }\n\n  componentDidMount() {\n    this.buscar();\n  }\n\n  enviarEmail = async () => {\n    if (this.state.form === \"block\") {\n      if (window.confirm(\"Deseja mesmo enviar?\")) {\n        let lista = this.state.lista\n        let listaEnviar = []\n        let o = {}\n\n        o.assunto = this.state.assunto\n        o.corpoEmail = this.state.corpoEmail\n\n        for (let i in lista) {\n          if (lista[i].check === true) {\n            let o = {};\n            o.id = lista[i].id\n            o.matricula = lista[i].matricula\n            o.tipo = lista[i].tipo\n            o.nome = lista[i].nome\n            o.email = lista[i].email\n            listaEnviar.push(o)\n          }\n        }\n\n        o.lista = listaEnviar\n        if (!o.assunto.isEmpty() && !o.corpoEmail.isEmpty()) {\n          if (o.lista.length > 0) {\n            await POST(\"gerenciarEmails/enviarEmail/\" + this.token, o)\n              .finally(response => {\n                console.log(response)\n              })\n          } else window.alert(\"Precisa selecionar alguém para enviar.\")\n        } else window.alert(\"Precisa preencher assunto e conteúdo, antes de enviar.\")\n      }\n      // this.verificarEmails();\n    } else alert(\"Abra o Corpo do E-mail antes de enviar\")\n  }\n\n  enviarTodosEmails = async () => {\n    if (this.state.form === \"block\") {\n      let o = {}\n      o.assunto = this.state.assunto\n      o.corpoEmail = this.state.corpoEmail\n      o.lista = []\n      if (window.confirm(\"Deseja mesmo enviar?\")) {\n        await POST(\"gerenciarEmails/enviarTodosEmails/\" + this.token, o)\n          .finally(response => {\n            console.log(response)\n          })\n      }\n    } else alert(\"Abra o Corpo do E-mail antes de enviar\")\n  }\n\n  // atualizar\n  buscar = () => {\n    // segundo atualiza <----------------------------\n    GET(\"gerenciarEmails/listarProfessores/\" + this.token)\n      .then(response => {\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n        this.setState({\n          lista: response,\n          listaCache: response,\n          inicial: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({\n          lista: [],\n          listaCache: [],\n          inicial: true\n        })\n      }).finally(() => {\n        this.setState({ loading: false })\n      })\n  }\n\n  //modal\n  checkToggle() {\n    this.setState(prevState => ({\n      checkBox: !prevState.checkBox\n    }));\n    let listaAux = []\n    for (let item in this.state.lista) {\n      let o = this.state.lista[item]\n      if (this.state.checkBox)\n        o.check = true\n      if (!this.state.checkBox)\n        o.check = false\n\n      listaAux.push(o)\n    }\n    this.setState({\n      lista: listaAux\n    })\n  }\n  toggleForm() {\n    if (this.state.form === \"none\") {\n      this.setState(prevState => ({\n        form: \"block\",\n        desativar: false\n      }));\n    }\n    if (this.state.form === \"block\") {\n      this.setState(prevState => ({\n        form: \"none\",\n        desativar: true\n      }));\n    }\n  }\n\n  getRetornaListaCorrente(listaCorrente) {\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n      this.setState({ listaCorrente });\n    }\n  }\n\n  async barraPesquisa(listaFiltrada) {\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n      await this.setState({\n        lista: listaFiltrada\n      })\n    }\n  }\n\n  render() {\n    const { desativar, checkBox, assunto, corpoEmail, form } = this.state;\n\n    return <div>\n      <div>\n        <Cabecalho user={this.props.user} />\n      </div>\n      <div className=\"corpo\">\n        <Row>\n          <Navegacao user={this.props.user} />\n          <ContainerFade>\n            <Row>\n              <div className=\"titulo\">\n                <h1>Gerenciar e-mails dos professores</h1>\n              </div>\n            </Row>\n            <div className=\"cadastro\">\n              <Container>\n                <Button outline onClick={this.toggleForm.bind(this)}>Corpo do E-mail</Button>\n                <Button disabled={desativar} outline onClick={() => this.enviarEmail()} className=\"enviarTodos\">Selecionados</Button>\n                <Button disabled={desativar} outline onClick={() => this.enviarTodosEmails()} className=\"enviarTodos\">Para todos</Button>\n                <Col style={{ display: form, marginTop: \"15px\" }}>\n                  <form>\n                    <Row>\n                      <Col xs={{ size: 12 }}>\n                        <Col>\n                          <InputDefault evento={this.preencheAssunto.bind(this)} valor={assunto} size=\"70\" tipo=\"text\" nome=\"assunto\" titulo=\"Assunto\" descricao=\"Assunto\" />\n                        </Col>\n                        <Col>\n                          <InputDefault evento={this.preencheCorpoEmail.bind(this)} valor={corpoEmail} size=\"3000\" tipo=\"textarea\" nome=\"corpoEmail\" titulo=\"Conteúdo\" descricao=\"Escreva o aqui...\" />\n                        </Col>\n                      </Col>\n                    </Row>\n                  </form>\n                </Col>\n              </Container>\n            </div>\n            <div className=\"div_tabela\">\n              <div className=\"barra_menu\">\n                <div className=\"w-50\">\n                  <BarraDePesquisa\n                    funcPesquisa={this.barraPesquisa.bind(this)}\n                    pesquisa={this.state.barraPesquisa}\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\n                    indicador=\"nome\"\n                    lista={this.state.listaCache} />\n                </div>\n                <div className=\"w-50\">\n\n                  <Paginacao\n                    lista={this.state.lista}\n                    total={this.state.lista.length}\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\n                  />\n                </div>\n              </div>\n              <Table>\n                <thead>\n                  <tr>\n                    <th className=\"checkAll\" width=\"7%\">\n                    <Input defaultChecked={!checkBox} type=\"checkbox\" id=\"check\" className=\"checkmark\" name=\"check\" onClick={() => this.checkToggle()} />\n                    </th>\n                    <th width=\"10%\">Matrícula</th>\n                    <th width=\"10%\">Tipo</th>\n                    <th width=\"35%\">Professor</th>\n                    <th width=\"35%\">E-mail</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.listaCorrente.map(o => {\n                    if (o.check === undefined) o.check = false;\n                    return (\n                      <tr onClick={() => this.preencheCheckbox(o.id, o.check)} key={o.id}>\n                        <td className=\"acao\" >\n                        <Input defaultChecked={o.check} type=\"checkbox\" id=\"check\" className=\"checkmark\" name=\"check\" />\n                        </td>\n                        <td>{o.matricula}</td>\n                        <td>{o.tipo}</td>\n                        <td>{o.nome}</td>\n                        <td>{o.email}</td>\n                      </tr>\n                    );\n                  })}\n                  {\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                  }\n                </tbody>\n              </Table>\n            </div>\n          </ContainerFade>\n        </Row>\n      </div >\n    </div >\n  };\n}\nexport default GerenciarEmailsProfessores\n\n","import React from \"react\";\nimport {\n    Input, Table, Row\n} from \"reactstrap\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { POST, GET, Loading } from \"../componentes/Request\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\"\n\nclass Disponibilidade extends React.Component {\n    state = {\n        lista: [],\n        html: [],\n        loading: false,\n        id: 0,\n        matricula: \"\",\n        tipo: \"\",\n        nome: \"\",\n        data: \"\",\n        email: \"\",\n        disableCheckbox: true,\n        item: {\n            segM: false, segT: false, segN: false,\n            terM: false, terT: false, terN: false,\n            quaM: false, quaT: false, quaN: false,\n            quiM: false, quiT: false, quiN: false,\n            sexM: false, sexT: false, sexN: false,\n            sabM: false, sabT: false, sabN: false,\n            domM: false, domT: false, domN: false\n        },\n        listaCorrente: [],\n        listaCache: [],\n        barraPesquisa: \"\"\n\n    }\n    token = this.props.user.token\n    attItem = this.attItem.bind(this)\n\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n    permissaoStatus = {\n        PROFESSOR: () => {\n            this.buscaItem(this.props.user.id)\n        },\n        ADMINISTRADOR: () => {\n            this.buscar()\n        }\n    }\n\n    componentDidMount() { this.permissaoStatus[this.props.user.permissao](); this.limpaItem() }\n\n    limpaDescricao() {\n        this.setState({\n            id: 0,\n            matricula: \"\",\n            tipo: \"\",\n            nome: \"\",\n            data: \"\",\n            email: \"\"\n        })\n    }\n\n    buscaItem(id) {\n        this.setState({\n            loading: true,\n            disableCheckbox: true\n        })\n        this.limpaDescricao()\n        this.setState({\n            id: id\n        })\n        GET(\"disponibilidade/buscarItem/\" + id + \"/\" + this.token)\n            .then(response => {\n                if (response.disponibilidade !== undefined) {\n                    this.setState({\n                        id: response.id,\n                        nome: response.nome,\n                        matricula: response.matricula,\n                        tipo: response.tipo,\n                        email: response.email,\n                        data: response.data\n                    })\n                    let it = Object.keys(response.disponibilidade)\n                    for (let i in it) {\n                        this.compoemTabela(it[i], response.disponibilidade[it[i]])\n                    }\n                } else this.limpaItem()\n            }).catch(() => {\n                console.log(\" errroooooooooooooooooooooooooooo \")\n                this.setState({\n                    id: 0\n                })\n            }).finally(() => {\n                this.setState({\n                    loading: false,\n                    disableCheckbox: false\n                })\n            })\n\n    }\n\n    altItem(b, v) {\n        let items = this.state.item;\n        items[b] = v;\n        this.setState({\n            item: items\n        })\n    }\n\n    compoemTabela(b, v) {\n        if (typeof v !== 'object') {\n            this.setState({\n                html: []\n            })\n            let auxilar = false;\n            let aProps = Object.getOwnPropertyNames(this.state.item);\n            for (let i = 0; i < aProps.length; i++) {\n                auxilar = false;\n                if (aProps[i] === b) {\n                    auxilar = true;\n                    this.altItem(b, v);\n                }\n            }\n            if (this.state.html.length !== 0) {\n                this.setStatbe(html => ({\n                    html: html.html.splice(0, 1),\n                }))\n            }\n            if (auxilar)\n                this.state.html.push(this.state.item)\n        }\n    }\n    limpaItem() {\n        this.setState({\n            item: {\n                segM: false, segT: false, segN: false,\n                terM: false, terT: false, terN: false,\n                quaM: false, quaT: false, quaN: false,\n                quiM: false, quiT: false, quiN: false,\n                sexM: false, sexT: false, sexN: false,\n                sabM: false, sabT: false, sabN: false,\n                domM: false, domT: false, domN: false\n            }\n        })\n    }\n\n    attItem(v, e) {\n        this.altItem(e, !v)\n        this.setState(html => ({\n            html: html.html.splice(0, 1),\n        }))\n        this.state.html.push(this.state.item)\n        this.enviaItem()\n    }\n\n    enviaItem() {\n        let o = {}\n        o.id = this.state.id\n        o.disponibilidade = this.state.item\n        POST(\"disponibilidade/inserirCheck/\" + this.token, o, false)\n    }\n\n    buscar = () => {\n        // segundo atualiza <----------------------------\n        this.setState({ loading: true })\n        GET(\"gerenciarEmails/listarProfessores/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    lista: response,\n                    listaCache: response,\n                    inicial: false\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    lista: [],\n                    listaCache: [],\n                    inicial: true\n                })\n            }).finally(() => {\n                this.setState({ loading: false })\n            })\n    }\n\n    getRetornaListaCorrente(listaCorrente) {\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n            this.setState({ listaCorrente });\n        }\n    }\n\n    async barraPesquisa(listaFiltrada) {\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n            await this.setState({\n                lista: listaFiltrada\n            })\n        }\n    }\n\n    render() {\n        const { disableCheckbox, loading, id, matricula, tipo, nome, email, data } = this.state\n        const { segM, segT, segN,\n            terM, terT, terN,\n            quaM, quaT, quaN,\n            quiM, quiT, quiN,\n            sexM, sexT, sexN,\n            sabM, sabT, sabN,\n            domM, domT, domN } = this.state.item\n\n        return <div>\n            <Loading loading={loading} message='Carregando ...' />\n            <div>\n                <Cabecalho user={this.props.user} />\n            </div>\n            <div className=\"corpo\" id=\"corpo\">\n                <Row>\n                    <Navegacao user={this.props.user} />\n                    <ContainerFade>\n                        <Row>\n                            <div className=\"titulo\">\n                                <h1>Disponibilidade</h1>\n                            </div>\n                        </Row>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <td>id: {id === 0 ? \"#\" : id}</td>\n                                    <td>Matrícula: {matricula === \"\" ? \"#\" : matricula}</td>\n                                    <td>Nome: {nome === \"\" ? \"#\" : nome}</td>\n                                </tr>\n                                <tr style={{ backgroundColor: \"transparent\", color: \"black\" }}>\n                                    <td style={{ width: \"15%\" }}>Tipo: {tipo === \"\" ? \"#\" : tipo}</td>\n                                    <td>Ultima Alteração: {data === \"\" ? \"#\" : data.formatDate()}</td>\n                                    <td>E-mail: {email === \"\" ? \"#\" : email}</td>\n                                </tr>\n                                <tr>\n                                    <th className=\"acao\" width=\"5%\">#</th>\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Manhã</th>\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Tarde</th>\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Noite</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th>Segunda</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segM, \"segM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={segM} type=\"checkbox\" name=\"segM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segT, \"segT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={segT} type=\"checkbox\" name=\"segT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segN, \"segN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={segN} type=\"checkbox\" name=\"segN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Terça</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terM, \"terM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={terM} type=\"checkbox\" name=\"terM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terT, \"terT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={terT} type=\"checkbox\" name=\"terT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terN, \"terN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={terN} type=\"checkbox\" name=\"terN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Quarta</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaM, \"quaM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quaM} type=\"checkbox\" name=\"quaM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaT, \"quaT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quaT} type=\"checkbox\" name=\"quaT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaN, \"quaN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quaN} type=\"checkbox\" name=\"quaN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Quinta</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiM, \"quiM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quiM} type=\"checkbox\" name=\"quiM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiT, \"quiT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quiT} type=\"checkbox\" name=\"quiT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiN, \"quiN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={quiN} type=\"checkbox\" name=\"quiN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Sexta</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexM, \"sexM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sexM} type=\"checkbox\" name=\"sexM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexT, \"sexT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sexT} type=\"checkbox\" name=\"sexT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexN, \"sexN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sexN} type=\"checkbox\" name=\"sexN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Sabado</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabM, \"sabM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sabM} type=\"checkbox\" name=\"sabM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabT, \"sabT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sabT} type=\"checkbox\" name=\"sabT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabN, \"sabN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={sabN} type=\"checkbox\" name=\"sabN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>Domingo</th>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domM, \"domM\") : null}>\n                                        <Input disabled={disableCheckbox} checked={domM} type=\"checkbox\" name=\"domM\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domT, \"domT\") : null}>\n                                        <Input disabled={disableCheckbox} checked={domT} type=\"checkbox\" name=\"domT\" className=\"checkmark\" />\n                                    </td>\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domN, \"domN\") : null}>\n                                        <Input disabled={disableCheckbox} checked={domN} type=\"checkbox\" name=\"domN\" className=\"checkmark\" />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                            <div className=\"div_tabela\">\n                                <div className=\"barra_menu\">\n                                    <div className=\"w-50\">\n                                        <BarraDePesquisa\n                                            funcPesquisa={this.barraPesquisa.bind(this)}\n                                            pesquisa={this.state.barraPesquisa}\n                                            attBarra={this.preencheBarraDePesquisa.bind(this)}\n                                            indicador=\"nome\"\n                                            lista={this.state.listaCache} />\n                                    </div>\n                                    <div className=\"w-50\">\n                                        <Paginacao\n                                            lista={this.state.lista}\n                                            total={this.state.lista.length}\n                                            retornaLista={this.getRetornaListaCorrente.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                                <a href=\"#corpo\">\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>ID</th>\n                                                <th>Professor</th>\n                                                <th>Matrícula</th>\n                                                <th>Tipo</th>\n                                                <th>E-mail</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.listaCorrente.map(o => {\n                                                let focus = {}\n                                                if (o.id === this.state.id) focus = { backgroundColor: '#0047B6', color: \"white\" }\n                                                return (\n                                                    <tr style={focus} key={o.id} onClick={() => this.buscaItem(o.id)}>\n                                                        <td>{o.id}</td>\n                                                        <td>{o.nome}</td>\n                                                        <td>{o.matricula}</td>\n                                                        <td>{o.tipo}</td>\n                                                        <td>{o.email}</td>\n                                                    </tr>\n                                                );\n                                            })}\n                                            {\n                                                this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </a>\n                            </div>\n                        </LinhaImaginaria>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </div>\n    };\n}\n\nexport default Disponibilidade\n\n","import React from \"react\";\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\nimport { Container, Input, Row, Table } from \"reactstrap\";\nimport { Cabecalho, ContainerFade, Navegacao, BarraInicial, BarraInicialDiv, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\";\nimport { GET, Loading, POST } from \"../componentes/Request\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass Competencia extends React.Component {\n    state = {\n        loading: false,\n        listaProfessores: [],\n        modalidade: [],\n        unidadeCurricular: [],\n        unidadeCurricularListaPesquisa: [],\n        unidadeCurricularListaTouch: [],\n        areaConhecimento: [],\n        cacheModalidade: [],\n        cacheUnidadeCurricular: [],\n        cacheAreaConhecimento: [],\n        count: 0,\n        id: 0,\n        matricula: \"\",\n        tipo: \"\",\n        nome: \"\",\n        email: \"\",\n        disableCheckbox: true,\n        listaCorrente: [],\n        listaCache: [],\n        barraPesquisa: \"\"\n    }\n    token = this.props.user.token\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this)\n\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n    async touchUnidadeCurricular(i, valor) {\n        await this.setState({\n            unidadeCurricularListaTouch: valor,\n            unidadeCurricular:\n                this.state.cacheUnidadeCurricular.filter(value => {\n                    if (valor === null | valor === undefined)\n                        return true\n                    return value.nome.includes(valor.nome) ? true : false\n                })\n        })\n    }\n    async checkToggleUnidadeCurricular(id) {\n\n        await this.setState({\n            unidadeCurricular: this.setCheck(this.state.unidadeCurricular, id),\n            cacheUnidadeCurricular: this.setCheck(this.state.cacheUnidadeCurricular, id),\n        })\n        this.setUnidadeCurricular()\n    }\n    permissaoStatus = {\n        PROFESSOR: () => {\n            this.buscaItem(this.props.user.id)\n        },\n        ADMINISTRADOR: () => {\n            this.buscarProfessores()\n        }\n    }\n    componentDidMount() {\n        this.getModalidade()\n        this.getAreaConhecimento()\n        this.getUnidadeCurricular()\n        this.permissaoStatus[this.props.user.permissao]()\n    }\n    limpaDescricao() {\n        this.setState({\n            id: 0,\n            matricula: \"\",\n            tipo: \"\",\n            nome: \"\",\n            email: \"\",\n            modalidade: this.state.cacheModalidade,\n            unidadeCurricular: this.state.cacheUnidadeCurricular,\n            areaConhecimento: this.state.cacheAreaConhecimento,\n\n        })\n    }\n\n    buscaItem(id) {\n        this.setState({\n            loading: true,\n            disableCheckbox: true\n        })\n        this.limpaDescricao()\n        this.setState({\n            id: id\n        })\n        GET(\"competencia/buscarItem/\" + id + \"/\" + this.token)\n            .then(response => {\n                let modalidade = this.limparCheck(this.state.cacheModalidade)\n                response.modalidade.forEach(item => {\n                    modalidade = this.setCheck(modalidade, item.id)\n                })\n                let areaConhecimento = []\n\n                modalidade.forEach(elem => {\n                    const newListaArea = elem.areaConhecimento.filter(elem => {\n                        return areaConhecimento.filter(elemUnidade => {\n                            return elemUnidade.id === elem.id\n                        }).length === 0\n                    })\n                    if (elem.check) areaConhecimento = areaConhecimento.concat(newListaArea)\n                })\n                areaConhecimento = this.limparCheck(areaConhecimento)\n                response.areaconhecimento.forEach(item => {\n                    areaConhecimento = this.setCheck(areaConhecimento, item.id)\n                })\n\n                let unidadeCurricular = []\n                areaConhecimento.forEach(elem => {\n                    const newLista = elem.unidadeCurricular.filter(elem => {\n                        return unidadeCurricular.filter(elemUnidade => {\n                            return elemUnidade.id === elem.id\n                        }).length === 0\n                    })\n                    if (elem.check) unidadeCurricular = unidadeCurricular.concat(newLista)\n                })\n\n                unidadeCurricular = this.limparCheck(unidadeCurricular)\n                response.unidadecurricular.forEach(elem => {\n                    unidadeCurricular = this.setCheck(unidadeCurricular, elem.id)\n                })\n\n\n                this.setState({\n                    id: response.id,\n                    nome: response.nome,\n                    matricula: response.matricula,\n                    tipo: response.tipo,\n                    email: response.email,\n                    unidadeCurricular: unidadeCurricular,\n                    cacheUnidadeCurricular: unidadeCurricular,\n                    unidadeCurricularListaPesquisa: unidadeCurricular,\n                    areaConhecimento: areaConhecimento\n                })\n                if (modalidade.length > 0)\n                    this.setState({\n                        modalidade: modalidade,\n                    })\n\n            }).catch(() => {\n                console.log(\" errroooooooooooooooooooooooooooo \")\n                this.setState({\n                    id: 0\n                })\n            }).finally(() => {\n                this.setState({\n                    loading: false,\n                    disableCheckbox: false\n                })\n            })\n\n    }\n\n    buscarProfessores = () => {\n        // segundo atualiza <----------------------------\n        this.setState({ loading: true })\n        GET(\"gerenciarEmails/listarProfessores/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    listaProfessores: response,\n                    listaCache: response,\n                    inicial: false\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    listaProfessores: [],\n                    listaCache: [],\n                    inicial: true\n                })\n            }).finally(() => {\n                this.setState({ loading: false })\n            })\n    }\n\n    async getModalidade() {\n        this.carregamentoInicial()\n        let response = await GET(\"competencia/pegamodalidades/\" + this.token)\n        if (response !== null && response !== undefined) {\n            this.setState({\n                modalidade: response,\n                cacheModalidade: response,\n            })\n        }\n        this.finalizarCarregamentoInicial()\n    }\n    async getAreaConhecimento() {\n        this.carregamentoInicial()\n        let response = await GET(\"competencia/pegaareaconhecimentos/\" + this.token)\n        if (response !== null && response !== undefined) {\n            this.setState({\n                areaConhecimento: response,\n                cacheAreaConhecimento: response,\n            })\n        }\n        this.finalizarCarregamentoInicial()\n    }\n    async getUnidadeCurricular() {\n        this.carregamentoInicial()\n        let response = await GET(\"competencia/pegaunidadecurriculares/\" + this.token)\n        if (response !== null && response !== undefined) {\n            this.setState({\n                unidadeCurricular: response,\n                cacheUnidadeCurricular: response,\n                unidadeCurricularListaPesquisa: response\n\n            })\n        }\n        this.finalizarCarregamentoInicial()\n    }\n\n    carregamentoInicial() {\n        let count = this.state.count\n        count++ \n        this.setState({\n            count: count\n        })\n    }\n    finalizarCarregamentoInicial() {\n        let count = this.state.count\n        count-- \n        this.setState({\n            count: count\n        })\n        if (this.state.count === 0) {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    async checkToggleModalidade(id) {\n        await this.setState({ modalidade: this.setCheck(this.state.modalidade, id) })\n        this.setModalidade()\n    }\n    async checkToggleAreaConhecimento(id) {\n        await this.setState({ areaConhecimento: this.setCheck(this.state.areaConhecimento, id) })\n        this.setAreaConhecimento()\n    }\n\n\n    async setModalidade() {\n        let o = {}\n        o.id = this.state.id;\n        o.modalidade = this.ForEachItemArray(this.state.modalidade)\n        await POST(\"competencia/inseremodalidade/\" + this.token, o)\n        this.buscaItem(this.state.id)\n    }\n    async setAreaConhecimento() {\n        let o = {}\n        o.id = this.state.id;\n        o.areaconhecimento = this.ForEachItemArray(this.state.areaConhecimento)\n        await POST(\"competencia/insereareaconhecimento/\" + this.token, o)\n        await this.setUnidadeCurricular()\n        this.buscaItem(this.state.id)\n    }\n    async setUnidadeCurricular() {\n        let o = {}\n        o.id = this.state.id;\n        o.unidadecurricular = this.ForEachItemArray(this.state.cacheUnidadeCurricular)\n        await POST(\"competencia/insereunidadecurricular/\" + this.token, o)\n    }\n\n    ForEachItemArray(list) {\n        let aux = []\n        this.filterCheck(list).forEach(item => {\n            if (item.check === true)\n                aux.push({ 'id': item.id })\n        });\n        return aux;\n    }\n\n    filterCheck(lista) {\n        return lista.filter(item => {\n            return item.check === true;\n        })\n    }\n\n    setCheck(lista, id) {\n        let novaLista = []\n        lista.forEach(item => {\n            if (item.id === id) {\n                novaLista.push({ ...item, check: !item.check })\n            } else {\n                novaLista.push({ ...item })\n            }\n        });\n\n        return novaLista\n    }\n\n    limparCheck(lista) {\n        let novaLista = []\n        lista.forEach(item => {\n            novaLista.push({ ...item, check: false })\n        });\n\n        return novaLista\n    }\n\n    getRetornaListaCorrente(listaCorrente) {\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n            this.setState({ listaCorrente });\n        }\n    }\n\n    async barraPesquisa(listaFiltrada) {\n        if (!ArrayCompare(this.state.listaProfessores, listaFiltrada)) {\n            await this.setState({\n                listaProfessores: listaFiltrada\n            })\n        }\n    }\n\n    organizaListaPorNome(lista) {\n        return lista.sort((a, b) => {\n            return a.nome.localeCompare(b.nome);\n        })\n    }\n\n    render() {\n        const { disableCheckbox, loading, unidadeCurricular, unidadeCurricularListaPesquisa, unidadeCurricularListaTouch, id, matricula, tipo, nome, email } = this.state\n        return <div>\n            <Loading loading={loading} message='Carregando ...' />\n            <div>\n                <Cabecalho user={this.props.user} />\n            </div>\n            <div className=\"corpo\">\n                <Row>\n                    <Navegacao user={this.props.user} />\n                    <ContainerFade>\n                        <Row>\n                            <div className=\"titulo\">\n                                <h1>Competência</h1>\n                            </div>\n                        </Row>\n                        <div id=\"corpo\" className=\"cadastro\">\n                            <Container >\n                                <div className=\"descriptionbox\">\n                                    <div className=\"flexbox\" style={{ borderTop: \"1px solid #dee2e6\" }}>\n                                        <div className=\"w-3\">id: {id === 0 ? \"#\" : id}</div>\n                                        <div className=\"w-3\">Matrícula: {matricula === \"\" ? \"#\" : matricula}</div>\n                                        <div className=\"w-3\">Nome: {nome === \"\" ? \"#\" : nome}</div>\n                                    </div>\n                                    <div className=\"flexbox\" style={{ borderTop: \"1px solid #dee2e6\" }}>\n                                        <div className=\"w-3\">E-mail: {email === \"\" ? \"#\" : email}</div>\n                                        <div className=\"w-3\" style={{ width: \"15%\" }}>Tipo: {tipo === \"\" ? \"#\" : tipo}</div>\n                                    </div>\n                                </div>\n                                <div className=\"flexbox\">\n                                    <div className=\"w-3\">\n                                        <div className=\"boxContainer\">\n                                            <div className=\"boxtitle\">Modalidade</div>\n                                            <div className=\"boxItens\">\n                                                {\n                                                    this.organizaListaPorNome(this.state.modalidade).map(res => {\n                                                        if (res.check === undefined) res.check = false;\n                                                        return (\n                                                            <div key={res.id} onClick={disableCheckbox === false ? () => this.checkToggleModalidade(res.id) : null} className=\"boxfields\">\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\n                                                                <div className=\"fieldsCheck\">\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                                {\n                                                    this.state.modalidade.length > 0 ? <BarraInicialDiv exec={false} message='' /> : <BarraInicialDiv exec={true} message={(<span style={{ fontSize: \"14px\" }}>Não possui itens para carregar.</span>)} />\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"w-3\">\n                                        <div className=\"boxContainer\">\n                                            <div className=\"boxtitle\">Área de conhecimento</div>\n                                            <div className=\"boxItens rolagem\">\n                                                {\n                                                    this.organizaListaPorNome(this.state.areaConhecimento).map(res => {\n                                                        if (res.check === undefined) res.check = false;\n                                                        return (\n                                                            <div key={res.id} onClick={disableCheckbox === false ? () => this.checkToggleAreaConhecimento(res.id) : null} className=\"boxfields\">\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\n                                                                <div className=\"fieldsCheck\">\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                                {\n                                                    this.state.areaConhecimento.length > 0 ? <BarraInicialDiv exec={false} message=''  /> : <BarraInicialDiv exec={true} message={(<span style={{ fontSize: \"14px\" }}>Selecione uma modalidade</span>)} />\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"w-3\">\n                                        <div className=\"boxContainer\">\n                                            <div className=\"boxtitle\">Unidade Curricular</div>\n                                            <Autocomplete\n                                                options={unidadeCurricularListaPesquisa }\n                                                value={unidadeCurricularListaTouch}\n                                                onChange={this.touchUnidadeCurricular}\n                                                getOptionLabel={(option) => option.nome? option.nome : \"\"}\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        variant=\"standard\"\n                                                        label=\"Pesquisar\"\n                                                        placeholder=\"Escolha...\"\n                                                    />\n                                                )}\n                                            />\n                                            <div className=\"boxItens rolagem\">\n                                                {\n\n                                                    this.organizaListaPorNome(unidadeCurricular).map(res => {\n                                                        if (res.check === undefined) res.check = false;\n                                                        return (\n                                                            <div key={res.id} onClick={disableCheckbox === false ? () => this.checkToggleUnidadeCurricular(res.id) : null} className=\"boxfields\">\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\n                                                                <div className=\"fieldsCheck\">\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                                {\n                                                    unidadeCurricular.length > 0 ? <BarraInicialDiv exec={false} message='' /> : <BarraInicialDiv exec={true} message={(<span style={{ fontSize: \"14px\" }}>Selecione um segmento tecnológico.</span>)} />\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Container>\n                            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\n                                <div className=\"div_tabela\">\n                                    <div className=\"barra_menu\">\n                                        <div className=\"w-50\">\n                                            <BarraDePesquisa\n                                                funcPesquisa={this.barraPesquisa.bind(this)}\n                                                pesquisa={this.state.barraPesquisa}\n                                                attBarra={this.preencheBarraDePesquisa.bind(this)}\n                                                indicador=\"nome\"\n                                                lista={this.state.listaCache} />\n                                        </div>\n                                        <div className=\"w-50\">\n                                            <Paginacao\n                                                lista={this.state.listaProfessores}\n                                                total={this.state.listaProfessores.length}\n                                                retornaLista={this.getRetornaListaCorrente.bind(this)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <a href=\"#corpo\">\n                                        <Table>\n                                            <thead>\n                                                <tr>\n                                                    <th>ID</th>\n                                                    <th>Matrícula</th>\n                                                    <th>Professor</th>\n                                                    <th>tipo</th>\n                                                    <th>E-mail</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.listaCorrente.map(o => {\n                                                    let focus = {}\n                                                    if (o.id === this.state.id) focus = { backgroundColor: '#0047B6', color: \"white\" }\n                                                    return (\n                                                        <tr style={focus} key={o.id} onClick={() => this.buscaItem(o.id)}>\n                                                            <td>{o.id}</td>\n                                                            <td>{o.matricula}</td>\n                                                            <td>{o.nome}</td>\n                                                            <td>{o.tipo}</td>\n                                                            <td>{o.email}</td>\n                                                        </tr>\n                                                    );\n                                                })}\n                                                {\n                                                    this.state.listaProfessores.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </a>\n                                </div>\n                            </LinhaImaginaria>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </div>\n    };\n}\n\nexport default Competencia\n\n","import React from \"react\";\nimport {\n    Container, Row, Col\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\nimport { POST, GET, Loading } from \"../componentes/Request\";\nimport { EmailDeConfirmacao } from \"../componentes/corpo\"\n\nclass CadastroTelaInicial extends React.Component {\n    state = {\n        nome: \"\",\n        email: \"\",\n        telefone: \"\",\n        permissao: \"\",\n        senha: \"\",\n        confirmar: \"\",\n        matricula: \"\",\n        tipo: \"\",\n        toggleModalConfirmacao: false,\n        tokenCadastroCache: \"\",\n        loading: false,\n    }\n\n    //fields inserir\n    preencheNome(nome) { this.setState({ nome }) }\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\n    preencheTelefone(telefone) { this.setState({ telefone: telefone.maskTelefone() }) }\n    preenchePermissao(permissao) { this.setState({ permissao }) }\n    preencheSenha(senha) { this.setState({ senha }) }\n    preencheConfirmar(confirmar) { this.setState({ confirmar }) }\n    preencheMatricula(matricula) { this.setState({ matricula }) }\n    preencheTipo(tipo) { this.setState({ tipo }) }\n    limparFormlulario() {\n        this.setState({\n            nome: \"\",\n            email: \"\",\n            telefone: \"\",\n            permissao: \"\",\n            senha: \"\",\n            confirmar: \"\",\n            matricula: \"\",\n            tipo: \"\"\n        })\n    }\n\n    enviaFormulario(event) {\n        let st = this.state\n        if (\n            !st.nome.isEmpty() &&\n            !st.email.isEmpty() &&\n            (\n                (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\n                st.telefone.isEmpty()\n            ) &&\n            (!st.tipo.isEmpty() && !st.tipo.equals(\"SELECIONE\")) &&\n            !st.senha.isEmpty() &&\n            !st.confirmar.isEmpty()\n        ) {\n            if (st.email.isEmail()) {\n                if (st.senha.length > 4) {\n                    if (st.senha.equals(st.confirmar)) {\n                        let o = {};\n                        o.nome = st.nome;\n                        o.email = st.email;\n                        o.tipo = st.tipo;\n                        o.matricula = st.matricula;\n                        o.telefone = st.telefone;\n                        o.senha = st.senha;\n                        this.inserir(o);\n                    } else alert(\"\\\"Confirmar senha\\\" precisa ser exatamente igual a senha.\")\n                } else alert(\"A senha precisa ter pelo menos 5 letras, e no máximo 10 letras.\")\n            } else alert(\"Digite um e-mail válido.\")\n        } else alert(\"Insira os dados para enviar\")\n\n    }\n\n    inserir = async o => {\n        this.setState({ loading: true });\n        await POST(\"professor/inserirProfessor/telaInicial/professor\", o, undefined, (ok) => {\n            this.toggleModalConfirmacaoFunc(true)\n        })\n            .then(response => {\n                this.setState({\n                    tokenCadastroCache: response\n                })\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            })\n\n    }\n\n    toggleModalConfirmacaoFunc(callback) {\n        if (callback !== undefined)\n            this.setState({\n                toggleModalConfirmacao: callback,\n            });\n        if (callback === false) window.location.href = \"/\";\n    }\n\n    async reenviarEmail() {\n        await GET(\"professor/enviarEmailCadastro/\" + this.state.tokenCadastroCache).then(() => {\n            alert(\"Verifique sua caixa de entrada e pasta de span, isso pode levar alguns minutos.\")\n        })\n    }\n\n    render() {\n        const { nome, email, telefone, senha, confirmar, matricula, tipo, loading, toggleModalConfirmacao } = this.state;\n        return <>\n            <Loading loading={loading} message='Carregando ...' />\n            <div className=\"corpoTelaInicial\">\n                <div className=\"cadastro\">\n                    <Container>\n                        <Col>\n                            <form>\n                                <Row>\n                                    <Col xs={{ size: 8, offset: 2 }}>\n                                        <Col>\n                                            <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\n                                        </Col>\n                                        <Row>\n                                            <Col md={{ size: 6 }}>\n                                                <InputDefault obrigatorio evento={this.preencheMatricula.bind(this)} valor={matricula} size=\"10\" tipo=\"text\" nome=\"matricula\" titulo=\"Matrícula\" descricao=\"Digite a sua matrícula\" />\n                                            </Col>\n                                            <Col md={{ size: 6 }}>\n                                                <InputDefault obrigatorio evento={this.preencheTipo.bind(this)} valor={tipo} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\n                                                    <option value=\"SELECIONE\">Selecione...</option>\n                                                    <option>HORISTA</option>\n                                                    <option>MENSALISTA</option>\n                                                </InputDefault>\n                                            </Col>\n                                        </Row>\n                                        <Col>\n                                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\n                                        </Col>\n                                        <Row>\n                                            <Col md={{ size: 6 }}>\n                                                <InputDefault evento={this.preencheTelefone.bind(this)} valor={telefone} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col md={{ size: 6 }}>\n                                                <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} size=\"10\" valor={senha} tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\n                                            </Col>\n                                            <Col md={{ size: 6 }}>\n                                                <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} size=\"10\" valor={confirmar} tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\n                                            </Col>\n                                        </Row>\n                                        <Col>\n                                            <div className=\"botao\" align=\"right\">\n                                                <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\n                                                <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                                            </div>\n                                        </Col>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </Col>\n                    </Container>\n                </div>\n            </div>\n            <EmailDeConfirmacao toggle={toggleModalConfirmacao} callback={this.toggleModalConfirmacaoFunc.bind(this)} email={email} reenviar={this.reenviarEmail.bind(this)}> \n                É necessário a confirmação de e-mail para prosseguir!\n            </EmailDeConfirmacao>\n        </>\n    }\n}\n\nexport default CadastroTelaInicial","import React from \"react\";\nimport {\n    Container, Row, Button\n} from \"reactstrap\";\nimport { GET, Loading, POST } from \"../../componentes/Request\";\nimport { ContainerFade, Navegacao, Cabecalho, BarraInicial } from \"../../componentes/corpo\"\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    withRouter\n} from \"react-router-dom\";\n\nclass RelacionamentoUnidadeCurricular extends React.Component {\n    state = {\n        areaConhecimento: {},\n        unidadeCurricular: [],\n        unidadeCurricularListaPesquisa: [],\n        unidadeCurricularListaTouch: [],\n        cacheUnidadeCurricular: [],\n        lista: [],\n        loading: true\n    }\n    id = this.props.match.params.id\n    token = this.props.match.params.token\n    voltarAreaConhecimento = this.voltarAreaConhecimento.bind(this)\n\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this)\n\n    async touchUnidadeCurricular(i, valor) {\n        console.log(valor)\n        await this.setState({\n            unidadeCurricularListaTouch: valor,\n            unidadeCurricular:\n                this.state.unidadeCurricular.filter(value => {\n                    if (valor === null | valor === undefined)\n                        return true\n                    return value.nome.includes(valor.nome) ? true : false\n                })\n        })\n        if (valor === null | valor === undefined) await this.atualizarUnidadeCurricular()\n    }\n\n    async componentDidMount() {\n        let areaConhecimento = await GET(\"areaConhecimento/buscar/\" + this.id + \"/\" + this.token)\n        console.log(areaConhecimento)\n        let unidadeCurricular = await GET(\"unidadeCurricular/listar/\" + this.token)\n        this.setState({\n            areaConhecimento: areaConhecimento,\n            unidadeCurricular: unidadeCurricular,\n            cacheUnidadeCurricular: unidadeCurricular,\n            lista: areaConhecimento.unidadeCurricular.length > 0 ? areaConhecimento.unidadeCurricular : [],\n            loading: false\n        })\n        await this.atualizarLista()\n        await this.atualizarUnidadeCurricular()\n    }\n\n    async atualizarLista() {\n        let areaConhecimento = await GET(\"areaConhecimento/buscar/\" + this.id + \"/\" + this.token)\n        if (areaConhecimento.unidadeCurricular)\n            await this.setState({\n                lista: areaConhecimento.unidadeCurricular.length > 0 ? areaConhecimento.unidadeCurricular : []\n            })\n        else\n            await this.setState({\n                lista: []\n            })\n    }\n\n    async atualizarUnidadeCurricular() {\n        let unidadeCurricular = await GET(\"unidadeCurricular/listar/\" + this.token)\n        this.setState({\n            unidadeCurricular: unidadeCurricular.filter((elem, id) => {\n                return this.state.lista.filter((elemLista, idLista) => {\n                    return elemLista.id === elem.id\n                }).length === 0\n            })\n        })\n    }\n\n    async click(id, decisao) {\n        let o = await this.state.lista.filter((elem, index) => {\n            return elem.id !== id\n        })\n        if (decisao) {\n            await this.state.unidadeCurricular.filter((elem, index) => {\n                return elem.id === id\n            }).forEach((elem, index) => {\n                if (elem.id === id) o.push(elem)\n            })\n        }\n        let req = this.state.areaConhecimento\n        req.unidadeCurricular = o\n        await POST(\"areaConhecimento/relacionar/\" + this.token, req)\n        await this.atualizarLista()\n        await this.atualizarUnidadeCurricular()\n    }\n\n    voltarAreaConhecimento() {\n        this.props.history.push(\"/cadastro/areaConhecimento\")\n    }\n    organizaListaPorNome(lista) {\n        return lista.sort((a, b) => {\n            return a.nome.localeCompare(b.nome);\n        })\n    }\n    render() {\n        const { areaConhecimento, unidadeCurricular, lista, loading, unidadeCurricularListaTouch } = this.state\n        return (<>\n            <Loading loading={loading} message='Carregando ...' />\n            <div className=\"corpo\">\n                <div>\n                    <Cabecalho user={this.props.user} />\n                </div>\n                <Row>\n                    <Navegacao user={this.props.user} backPaste=\"../../\" />\n                    <ContainerFade>\n                        <div className=\"cadastro\">\n                            <div style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"5px\" }}>\n                                <Button outline type=\"button\" onClick={() => this.voltarAreaConhecimento()} color=\"secondary\" size=\"sm\" className=\"Limpar\">Voltar</Button>\n                            </div>\n                            <Container>\n                                <div className=\"flexbox\">\n                                    <div className=\"w-25\">\n                                        <div className=\"caixa_detalhe disponivelDescriptionBox\">\n                                            <div style={{ textAlign: \"center\" }}>\n                                                Segmento Tecnológico\n                                            </div>\n                                            <div className=\"flexbox\">\n                                                <div className=\"w-25\">\n                                                    <b>id:</b>\n                                                </div>\n                                                <div className=\"w-75\">\n                                                    {areaConhecimento.id}\n                                                </div>\n                                            </div>\n                                            <div className=\"flexbox\">\n                                                <div className=\"w-25\">\n                                                    <b>Nome:</b>\n                                                </div>\n                                                <div className=\"w-75\">\n                                                    {areaConhecimento.nome}\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <div>\n                                                    <b>Observação</b>\n                                                </div>\n                                                {areaConhecimento.descricao}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"flexbox w-full\">\n                                        <div className=\"boxContainer w-50\">\n                                            <div className=\"boxtitle\">Unidade curricular</div>\n                                            <div className=\"boxItens rolagem\">\n                                                <Autocomplete\n                                                    options={unidadeCurricular}\n                                                    value={unidadeCurricularListaTouch}\n                                                    onChange={this.touchUnidadeCurricular}\n                                                    getOptionLabel={(option) => option.nome}\n                                                    renderInput={(params) => (\n                                                        <TextField\n                                                            {...params}\n                                                            variant=\"standard\"\n                                                            label=\"Pesquisar\"\n                                                            placeholder=\"Escolha...\"\n                                                        />\n                                                    )}\n                                                />\n                                                {\n                                                    this.organizaListaPorNome(unidadeCurricular).map(res => {\n                                                        return (\n                                                            <div onClick={() => this.click(res.id, true)} className=\"boxfields\">\n                                                                <div className=\"fieldsLabelCenter\">{res.nome}</div>\n                                                                <div className=\"fieldsCheck\">\n                                                                    <span style={{color:\"green\"}}><FaArrowRight /></span>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"boxContainer w-50\">\n                                            <div className=\"boxtitle\">Relacionado</div>\n                                            <div className=\"boxItens rolagem\">\n                                                {\n                                                    this.organizaListaPorNome(lista).length > 0 ?\n                                                        lista.map(res => {\n                                                            return (\n                                                                <div onClick={() => this.click(res.id, false)} className=\"boxfields\">\n                                                                    <div className=\"fieldsCheck\">\n                                                                    <span style={{color:\"red\"}}><FaArrowLeft /></span>\n                                                                    </div>\n                                                                    <div className=\"fieldsLabelCenter\">{res.nome}</div>\n                                                                </div>\n                                                            )\n                                                        }) : null\n                                                }\n                                                {\n                                                    lista.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>Não possui itens para carregar.</span>)} colspan=\"1\" />\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Container>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </>)\n    }\n}\n\nexport default withRouter(RelacionamentoUnidadeCurricular)","import React from \"react\";\nimport { \n    Container, Row, Button\n} from \"reactstrap\";\nimport { GET, Loading, POST } from \"../../componentes/Request\";\nimport { ContainerFade, Navegacao, Cabecalho, BarraInicial } from \"../../componentes/corpo\"\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    withRouter\n} from \"react-router-dom\";\n\nclass RelacionamentoSegmentoTecnologico extends React.Component {\n    state = {\n        modalidade: {},\n        areaConhecimento: [],\n        unidadeCurricularListaPesquisa: [],\n        unidadeCurricularListaTouch: [],\n        cacheUnidadeCurricular: [],\n        lista: [],\n        loading: true\n    }\n    id = this.props.match.params.id\n    token = this.props.match.params.token\n    voltarAreaConhecimento = this.voltarAreaConhecimento.bind(this)\n\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this)\n\n    async touchUnidadeCurricular(i, valor) {\n        console.log(valor)\n        await this.setState({\n            unidadeCurricularListaTouch: valor,\n            areaConhecimento:\n                this.state.areaConhecimento.filter(value => {\n                    if (valor === null | valor === undefined)\n                        return true\n                    return value.nome.includes(valor.nome) ? true : false\n                })\n        })\n        if (valor === null | valor === undefined) await this.atualizarUnidadeCurricular()\n    }\n\n    async componentDidMount() {\n        let modalidade = await GET(\"modalidade/buscar/\" + this.id + \"/\" + this.token)\n        console.log(modalidade)\n        let areaConhecimento = await GET(\"areaConhecimento/listar/\" + this.token)\n        this.setState({\n            modalidade: modalidade,\n            areaConhecimento: areaConhecimento,\n            cacheUnidadeCurricular: areaConhecimento,\n            lista: modalidade.areaConhecimento.length > 0 ? modalidade.areaConhecimento : [],\n            loading: false\n        })\n        await this.atualizarLista()\n        await this.atualizarUnidadeCurricular()\n    }\n\n    async atualizarLista() {\n        let modalidade = await GET(\"modalidade/buscar/\" + this.id + \"/\" + this.token)\n        if (modalidade.areaConhecimento)\n            await this.setState({\n                lista: modalidade.areaConhecimento.length > 0 ? modalidade.areaConhecimento : []\n            })\n        else\n            await this.setState({\n                lista: []\n            })\n    }\n\n    async atualizarUnidadeCurricular() {\n        let areaConhecimento = await GET(\"areaConhecimento/listar/\" + this.token)\n        this.setState({\n            areaConhecimento: areaConhecimento.filter((elem, id) => {\n                return this.state.lista.filter((elemLista, idLista) => {\n                    return elemLista.id === elem.id\n                }).length === 0\n            })\n        })\n    }\n\n    async click(id, decisao) {\n        let o = await this.state.lista.filter((elem, index) => {\n            return elem.id !== id\n        })\n        if (decisao) {\n            await this.state.areaConhecimento.filter((elem, index) => {\n                return elem.id === id\n            }).forEach((elem, index) => {\n                if (elem.id === id) o.push(elem)\n            })\n        }\n        let req = this.state.modalidade\n        req.areaConhecimento = o\n        await POST(\"modalidade/relacionar/\" + this.token, req)\n        await this.atualizarLista()\n        await this.atualizarUnidadeCurricular()\n    }\n\n    voltarAreaConhecimento() {\n        this.props.history.push(\"/cadastro/modalidade\")\n    }\n    organizaListaPorNome(lista) {\n        return lista.sort((a, b) => {\n            return a.nome.localeCompare(b.nome);\n        })\n    }\n    render() {\n        const { modalidade, areaConhecimento, lista, loading, unidadeCurricularListaTouch } = this.state\n        return (<>\n            <Loading loading={loading} message='Carregando ...' />\n            <div className=\"corpo\">\n                <div>\n                    <Cabecalho user={this.props.user} />\n                </div>\n                <Row>\n                    <Navegacao user={this.props.user} backPaste=\"../../\" />\n                    <ContainerFade>\n                        <div className=\"cadastro\">\n                            <div style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"5px\" }}>\n                                <Button outline type=\"button\" onClick={() => this.voltarAreaConhecimento()} color=\"secondary\" size=\"sm\" className=\"Limpar\">Voltar</Button>\n                            </div>\n                            <Container>\n                                <div className=\"flexbox\">\n                                    <div className=\"w-25\">\n                                        <div className=\"caixa_detalhe disponivelDescriptionBox\">\n                                            <div style={{ textAlign: \"center\" }}>\n                                                Modalidade\n                                            </div>\n                                            <div className=\"flexbox\">\n                                                <div className=\"w-25\">\n                                                    <b>id:</b>\n                                                </div>\n                                                <div className=\"w-75\">\n                                                    {modalidade.id}\n                                                </div>\n                                            </div>\n                                            <div className=\"flexbox\">\n                                                <div className=\"w-25\">\n                                                    <b>Nome:</b>\n                                                </div>\n                                                <div className=\"w-75\">\n                                                    {modalidade.nome}\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <div>\n                                                    <b>Observação</b>\n                                                </div>\n                                                {modalidade.descricao}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"flexbox w-full\">\n                                        <div className=\"boxContainer w-50\">\n                                            <div className=\"boxtitle\">Unidade curricular</div>\n                                            <div className=\"boxItens rolagem\">\n                                                <Autocomplete\n                                                    options={areaConhecimento}\n                                                    value={unidadeCurricularListaTouch}\n                                                    onChange={this.touchUnidadeCurricular}\n                                                    getOptionLabel={(option) => option.nome}\n                                                    renderInput={(params) => (\n                                                        <TextField\n                                                            {...params}\n                                                            variant=\"standard\"\n                                                            label=\"Pesquisar\"\n                                                            placeholder=\"Escolha...\"\n                                                        />\n                                                    )}\n                                                />\n                                                {\n                                                    this.organizaListaPorNome(areaConhecimento).map(res => {\n                                                        return (\n                                                            <div onClick={() => this.click(res.id, true)} className=\"boxfields\">\n                                                                <div className=\"fieldsLabelCenter\">{res.nome}</div>\n                                                                <div className=\"fieldsCheck\">\n                                                                    <span style={{color:\"green\"}}><FaArrowRight /></span>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"boxContainer w-50\">\n                                            <div className=\"boxtitle\">Relacionado</div>\n                                            <div className=\"boxItens rolagem\">\n                                                {\n                                                    this.organizaListaPorNome(lista).length > 0 ?\n                                                        lista.map(res => {\n                                                            return (\n                                                                <div onClick={() => this.click(res.id, false)} className=\"boxfields\">\n                                                                    <div className=\"fieldsCheck\">\n                                                                    <span style={{color:\"red\"}}><FaArrowLeft /></span>\n                                                                    </div>\n                                                                    <div className=\"fieldsLabelCenter\">{res.nome}</div>\n                                                                </div>\n                                                            )\n                                                        }) : null\n                                                }\n                                                {\n                                                    lista.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>Não possui itens para carregar.</span>)} colspan=\"1\" />\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Container>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </>)\n    }\n}\n\nexport default withRouter(RelacionamentoSegmentoTecnologico)","import React from \"react\";\nimport {\n    Container, Row, Col\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { BotaoEnviar } from \"../componentes/botoes\";\nimport { POST, Loading } from \"../componentes/Request\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EsqueciMinhaSenha extends React.Component {\n    state = {\n        email: \"\",\n        loading: false,\n    }\n\n    //fields inserir\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\n\n    enviaFormulario(event) {\n        let st = this.state\n        if (\n            !st.email.isEmpty()\n        ) {\n            if (st.email.isEmail()) {\n                let o = {};\n                o.email = st.email;\n                this.enviar(o);\n            } else alert(\"Digite um e-mail válido.\")\n        } else alert(\"Insira os dados para enviar\")\n    }\n\n    enviar = async o => {\n        this.setState({ loading: true });\n        await POST(\"gerenciarEmails/esqueciMinhaSenha\", o, undefined, (ok) => {\n            if (ok) {\n                alert(\"Enviamos um e-mail para o endereço: \"+o.email)\n                window.location.href = \"/\";\n            }\n        }).finally(() => {\n            this.setState({ loading: false });\n        })\n    }\n\n    render() {\n        const { email, loading } = this.state;\n        return <>\n            <Loading loading={loading} message='Carregando ...' />\n            <div className=\"corpoTelaInicial\">\n                <div className=\"cadastro\">\n                    <Container>\n                        <Col>\n                            <form>\n                                <Row>\n                                    <Col xs={{ size: 8, offset: 2 }}>\n                                        <Col className=\"caixa_alerta\">\n                                            <p className=\"p_alerta\">Digite o endereço de e-mail que foi usado no seu cadastro,</p>\n                                            <p className=\"p_alerta\">Você poderá refazer sua senha pelo link que enviaremos para esse endereço.</p>\n                                        </Col>\n                                        <Col style={{ marginTop: \"15px\" }}>\n                                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"70\" tipo=\"text\" nome=\"email\" titulo=\"E-mail\" descricao=\"Digite seu e-mail\" />\n                                        </Col>\n                                        <Col>\n                                            <div className=\"botao\" align=\"right\">\n                                                <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                                            </div>\n                                        </Col>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </Col>\n                    </Container>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default withRouter(EsqueciMinhaSenha)","import React from \"react\";\nimport {\n    Container, Row, Col\n} from \"reactstrap\";\nimport { GET, Loading } from \"../componentes/Request\";\nimport {\n    withRouter\n} from \"react-router-dom\";\n\nclass FinalizarCadastro extends React.Component {\n    state = {\n        loading: true,\n        resultado: null\n    }\n    voltarTelaInicial = this.voltarTelaInicial.bind(this)\n    async componentDidMount() {\n        await GET(\"professor/finalizarCadastro/\" + this.props.match.params.token, false).then(() => {\n            this.setState({\n                loading: false,\n                resultado: (<>\n                    <Col className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\n                        <p className=\"p_alerta\" style={{ color: \"#00dc00\" }}>Seu cadastro foi finalizado com sucesso!</p>\n                        <p className=\"p_alerta\">Deverá conseguir se logar no sistema a partir de agora.</p>\n                        <p className=\"p_alerta\">Você pode voltar para a tela de login por este caminho.</p>\n                        <button className=\"btn_telaInicial\" type=\"button\" onClick={() => this.voltarTelaInicial()}>Click aqui</button>\n                    </Col>\n                </>)\n            })\n        }).catch(err => {\n            this.setState({\n                loading: false,\n                resultado: (<>\n                    <Col className=\"caixa_alerta\">\n                        <p className=\"p_alerta\" style={{ color: \"rgb(255, 93, 93)\" }}>Seu cadastro não foi finalizado.</p>\n                        <p className=\"p_alerta\">Pode ser que o servidor não conseguiu processar sua finalização ou esteja fora do ar.</p>\n                        <p className=\"p_alerta\">Recomendo que tente novamente mais tarde ou entre em contato com um administrador.</p>\n                        <p className=\"p_alerta\">Você pode voltar para a tela de login por este caminho.</p>\n                        <button className=\"btn_telaInicial\" type=\"button\" onClick={() => this.voltarTelaInicial()}>Click aqui</button>\n                    </Col>\n                </>)\n            })\n            if (err.status === undefined) alert(\"Ops! O servidor não está respondendo.\\nPor favor, aguarde um momento e tente novamente.\")\n            if (err.status >= 500)\n                err.text().then(errorMessage => {\n                    console.log(errorMessage)\n                    if (errorMessage !== undefined && errorMessage === \"USUARIO_JA_CADASTRADO\") {\n                        alert(\"Seu cadastro ja foi efetuado, pode realizar seu login.\")\n                        window.location.href = \"/\";\n                    }\n                })\n            else\n                if (err.status >= 400) alert(\"Ops! Erro: \" + err.status + \" \\nO servidor não conseguiu processar esta requisição.\")\n\n        })\n    }\n    voltarTelaInicial() {\n        window.location.href = \"/\";\n    }\n    render() {\n        return (<>\n            <Loading loading={this.state.loading} message='Carregando ...' />\n            <div className=\"corpoTelaInicial\">\n                <div className=\"cadastro\">\n                    <Container>\n                        <Row>\n                            <Col xs={{ size: 8, offset: 2 }}>\n                                {this.state.resultado}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        </>)\n\n    }\n}\n\nexport default withRouter(FinalizarCadastro)","import React from \"react\";\nimport {\n    Container, Row, Col\n} from \"reactstrap\";\nimport InputDefault from \"../componentes/inputsPadroes\";\nimport { BotaoEnviar } from \"../componentes/botoes\";\nimport { POST, Loading } from \"../componentes/Request\";\nimport {\n    withRouter\n} from \"react-router-dom\";\nclass AlterarSenha extends React.Component {\n    state = {\n        token: \"\",\n        senha: \"\",\n        confirmar: \"\",\n        sucesso: false\n    }\n\n    preencheSenha(senha) { this.setState({ senha }) }\n    preencheConfirmar(confirmar) { this.setState({ confirmar }) }\n\n    componentDidMount() {\n        console.log(this.props.match.params)\n        this.setState({\n            token: this.props.match.params.token\n        })\n    }\n\n    //fields inserir\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\n\n    enviaFormulario(event) {\n        let st = this.state\n        if (st.senha.length > 4) {\n            if (st.senha.equals(st.confirmar)) {\n              let o = {};\n              o.token = st.token\n              o.senha = st.senha;\n              this.enviar(o);\n            } else alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\")\n          } else alert(\"A senha precisa ter pelo menos 5 letras, e no máximo 10 letras.\")\n    }\n\n    enviar = async o => {\n        this.setState({ loading: true });\n        await POST(\"professor/alterarSenha\", o, undefined, (ok) => {\n            if (ok) {\n                this.setState({\n                    sucesso: true\n                })\n            }\n        }).finally(() => {\n            this.setState({ loading: false });\n        })\n    }\n    voltarTelaInicial() {\n        window.location.href = \"/\";\n    }\n    render() {\n        const { senha, confirmar, loading, token, sucesso } = this.state;\n        return (token === \"\" || token === undefined || token === null) ?\n            baba(this.voltarTelaInicial.bind(this)) :\n            sucesso ?\n                novaSenhaSucesso(this.voltarTelaInicial.bind(this)) :\n                (<>\n                    <Loading loading={loading} message='Carregando ...' />\n                    <div className=\"corpoTelaInicial\">\n                        <div className=\"cadastro\">\n                            <Container>\n                                <Col>\n                                    <form>\n                                        <Row style={{ marginTop: \"15px\" }}>\n                                            <Col xs={{ size: 8, offset: 2 }}>\n                                                <Col className=\"caixa_alerta\">\n                                                    <p className=\"p_alerta\">Digite uma nova senha</p>\n                                                </Col>\n                                                <Row style={{ marginTop: \"15px\" }}>\n                                                    <Col md={{ size: 6 }}>\n                                                        <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} valor={senha} size=\"10\" tipo=\"password\" nome=\"senha\" titulo=\"Nova senha\" descricao=\"Digite uma senha nova\" />\n                                                    </Col>\n                                                    <Col md={{ size: 6 }}>\n                                                        <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} valor={confirmar} size=\"10\" tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme sua senha nova\" />\n                                                    </Col>\n                                                </Row>\n                                                <Col>\n                                                    <div className=\"botao\" align=\"right\">\n                                                        <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\n                                                    </div>\n                                                </Col>\n                                            </Col>\n                                        </Row>\n                                    </form>\n                                </Col>\n                            </Container>\n                        </div>\n                    </div>\n                </>)\n    }\n}\n\nclass AlterarSenhaFail extends React.Component {\n    voltarTelaInicial() {\n        window.location.href = \"/\";\n    }\n    render() {\n        return baba(this.voltarTelaInicial.bind(this))\n    }\n}\n\nfunction baba(voltarTelaInicial) {\n    return (<>\n        <div className=\"corpoTelaInicial\">\n            <div className=\"cadastro\">\n                <Container>\n                    <Row>\n                        <Col xs={{ size: 8, offset: 2 }}>\n                            <Col className=\"caixa_alerta\">\n                                <p className=\"p_alerta\">Oi amigo, você está perdido?</p>\n                                <p className=\"p_alerta\">Você pode voltar para a tela de login por este caminho.</p>\n                                <button className=\"btn_telaInicial\" type=\"button\" onClick={() => voltarTelaInicial()}>Click aqui</button>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    </>)\n}\n\nfunction novaSenhaSucesso(voltarTelaInicial) {\n    return (<>\n        <div className=\"corpoTelaInicial\">\n            <div className=\"cadastro\">\n                <Container>\n                    <Row>\n                        <Col xs={{ size: 8, offset: 2 }}>\n                            <Col className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\n                                <p className=\"p_alerta\">Sua senha foi alterado com sucesso!</p>\n                                <p className=\"p_alerta\">Você pode voltar para a tela de login por este caminho.</p>\n                                <button className=\"btn_telaInicial\" type=\"button\" onClick={() => voltarTelaInicial()}>Click aqui</button>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    </>)\n}\n\nAlterarSenha = withRouter(AlterarSenha)\nAlterarSenhaFail = withRouter(AlterarSenhaFail)\n\nexport { AlterarSenha, AlterarSenhaFail }","import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Row, Input, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\nimport { POST, Loading } from \"../componentes/Request\";\nimport { ContainerFade, Navegacao, Cabecalho, ModalDetalhe } from \"../componentes/corpo\"\n\nclass ConsultaDisponibilidade extends React.Component {\n    state = {\n        lista: [],\n        professor: {},\n        loading: false,\n        count: 0,\n        manha: \"\",\n        tarde: \"\",\n        noite: \"\",\n        pesquisa: \"\",\n        manhap:false,\n        tardep:false,\n        noitep:false,\n        segunda: false,\n        terca: false,\n        quarta: false,\n        quinta: false,\n        sexta: false,\n        sabado: false,\n        domingo: false,\n        modalidade: [],\n        areaConhecimento: [],\n        unidadeCurricular: [],\n        toggle: false\n    }\n    token = this.props.user.token\n\n    componentDidMount() {\n        this.getListaProfessores()\n    }\n    setPesquisa(pesquisa) { this.setState({ pesquisa: pesquisa.target.value.toString().limitSize(255) }) }\n\n    async getListaProfessores() {\n        this.setState({ loading: true })\n        let st = this.state\n        let o = {}\n        o.pesquisa = st.pesquisa\n        o.segunda = st.segunda\n        o.terca = st.terca\n        o.quarta = st.quarta\n        o.quinta = st.quinta\n        o.sexta = st.sexta\n        o.sabado = st.sabado\n        o.domingo = st.domingo\n        o.manha = st.manhap\n        o.tarde = st.tardep\n        o.noite = st.noitep\n        let response = await POST(\"disponibilidade/listadisponibilidade/\" + this.token, o)\n        if (response !== null && response !== undefined) {\n            this.setState({\n                lista: response,\n            })\n        }\n\n        this.setState({ loading: false })\n    }\n\n    async professorInfo(id) {\n        await this.setState({\n            professor: this.pegaProfessor(id)\n        })\n        this.setState({ loading: true })\n        await this.getDisponibilidade()\n        await this.getModalidade()\n        await this.getAreaconhecimento()\n        await this.getUnidadecurricular()\n        this.setState({ loading: false })\n    }\n\n    getModalidade() {\n        let modalidade = this.state.professor.modalidade\n        let lista = []\n        for (let i = 0; i < modalidade.length; i++) {\n            lista.push(modalidade[i].nome)\n        }\n        this.setState({\n            modalidade: lista\n        })\n    }\n    getAreaconhecimento() {\n        let areaConhecimento = this.state.professor.areaconhecimento\n        let lista = []\n        for (let i = 0; i < areaConhecimento.length; i++) {\n            lista.push(areaConhecimento[i].nome)\n        }\n        this.setState({\n            areaConhecimento: lista\n        })\n    }\n    getUnidadecurricular() {\n        let unidadeCurricular = this.state.professor.unidadecurricular\n        let lista = []\n        for (let i = 0; i < unidadeCurricular.length; i++) {\n            let o = {}\n            o.id = unidadeCurricular[i].id\n            o.nome = unidadeCurricular[i].nome\n            o.descricao = unidadeCurricular[i].descricao\n            lista.push(o)\n        }\n        this.setState({\n            unidadeCurricular: lista\n        })\n    }\n\n    pegaProfessor(id) {\n        for (let item of this.state.lista) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n    }\n\n    getDisponibilidade() {\n        let disp = this.state.professor.disponibilidade\n        let manha = \"\"\n        let tarde = \"\"\n        let noite = \"\"\n\n        if (disp.segM) manha += \"Segunda, \"\n        if (disp.terM) manha += \"Terça, \"\n        if (disp.quaM) manha += \"Quarta, \"\n        if (disp.quiM) manha += \"Quinta, \"\n        if (disp.sexM) manha += \"Sexta, \"\n        if (disp.sabM) manha += \"Sabado, \"\n        if (disp.domM) manha += \"Domingo, \"\n\n        if (disp.segT) tarde += \"Segunda, \"\n        if (disp.terT) tarde += \"Terça, \"\n        if (disp.quaT) tarde += \"Quarta, \"\n        if (disp.quiT) tarde += \"Quinta, \"\n        if (disp.sexT) tarde += \"Sexta, \"\n        if (disp.sabT) tarde += \"Sabado, \"\n        if (disp.domT) tarde += \"Domingo, \"\n\n        if (disp.segN) noite += \"Segunda, \"\n        if (disp.terN) noite += \"Terça, \"\n        if (disp.quaN) noite += \"Quarta, \"\n        if (disp.quiN) noite += \"Quinta, \"\n        if (disp.sexN) noite += \"Sexta, \"\n        if (disp.sabN) noite += \"Sabado, \"\n        if (disp.domN) noite += \"Domingo, \"\n\n        this.setState({\n            manha: manha.substr(0, manha.length - 2),\n            tarde: tarde.substr(0, tarde.length - 2),\n            noite: noite.substr(0, noite.length - 2),\n        })\n    }\n\n    async setcheck(param) {\n        switch (param) {\n            case \"segunda\": await this.setState(dia => ({ segunda: !dia.segunda })); break;\n            case \"terca\": await this.setState(dia => ({ terca: !dia.terca })); break;\n            case \"quarta\": await this.setState(dia => ({ quarta: !dia.quarta })); break;\n            case \"quinta\": await this.setState(dia => ({ quinta: !dia.quinta })); break;\n            case \"sexta\": await this.setState(dia => ({ sexta: !dia.sexta })); break;\n            case \"sabado\": await this.setState(dia => ({ sabado: !dia.sabado })); break;\n            case \"domingo\": await this.setState(dia => ({ domingo: !dia.domingo })); break;\n            case \"manhap\": await this.setState(dia => ({ manhap: !dia.manhap })); break;\n            case \"tardep\": await this.setState(dia => ({ tardep: !dia.tardep })); break;\n            case \"noitep\": await this.setState(dia => ({ noitep: !dia.noitep })); break;\n            default: console.log(\"erro opcao\"); break;\n        }\n        this.getListaProfessores()\n    }\n\n\n    render() {\n        const { loading, professor, pesquisa, manhap,tardep, noitep, manha, tarde, noite, segunda, terca, quarta, quinta, sabado, sexta, domingo, modalidade, areaConhecimento, unidadeCurricular } = this.state\n        return <div>\n            <Loading loading={loading} message='Carregando ...' />\n            <div>\n                <Cabecalho user={this.props.user} />\n            </div>\n            <div className=\"corpo\">\n                <Row>\n                    <Navegacao user={this.props.user} />\n                    <ContainerFade>\n                        <Row>\n                            <div className=\"titulo\">\n                                <h1>Consulta de disponibilidade</h1>\n                            </div>\n                        </Row>\n                        <div className=\"flexbox\">\n                            <div className=\"filtroInputDisponibilidade\">\n                                <InputGroup className=\"w-50\">\n                                    <Input value={pesquisa} onChange={this.setPesquisa.bind(this)} name=\"pesquisa\" placeholder=\"Barra de pesquisa\" />\n                                    <InputGroupAddon addonType=\"append\">\n                                        <Button color=\"secondary\" onClick={() => this.getListaProfessores()}>\n                                            <FaSearch />\n                                        </Button>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                            </div>\n                        </div>\n                        <div className=\"flexbox filtroSemanaButtons\">\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"manhap\" className=\"filtroDivSemana w-full\" outline=\"true\">Manhã\n                                    <Input defaultChecked={manhap} onChange={() => this.setcheck(\"manhap\")} type=\"checkbox\" id=\"manhap\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"tardep\" className=\"filtroDivSemana w-full\" outline=\"true\">Tarde\n                                    <Input defaultChecked={tardep} onChange={() => this.setcheck(\"tardep\")} type=\"checkbox\" id=\"tardep\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"noitep\" className=\"filtroDivSemana w-full\" outline=\"true\">Noite\n                                    <Input defaultChecked={noitep} onChange={() => this.setcheck(\"noitep\")} type=\"checkbox\" id=\"noitep\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"flexbox filtroSemanaButtons\">\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"segunda\" className=\"filtroDivSemana w-full\" outline=\"true\">Segunda\n                                    <Input defaultChecked={segunda} onChange={() => this.setcheck(\"segunda\")} type=\"checkbox\" id=\"segunda\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"terca\" className=\"filtroDivSemana w-full \" outline=\"true\">Terça\n                                    <Input defaultChecked={terca} onChange={() => this.setcheck(\"terca\")} type=\"checkbox\" id=\"terca\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"quarta\" className=\"filtroDivSemana w-full \" outline=\"true\">Quarta\n                                    <Input defaultChecked={quarta} onChange={() => this.setcheck(\"quarta\")} type=\"checkbox\" id=\"quarta\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"quinta\" className=\"filtroDivSemana w-full \" outline=\"true\">Quinta\n                                    <Input defaultChecked={quinta} onChange={() => this.setcheck(\"quinta\")} type=\"checkbox\" id=\"quinta\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"sexta\" className=\"filtroDivSemana w-full \" outline=\"true\">Sexta\n                                    <Input defaultChecked={sexta} onChange={() => this.setcheck(\"sexta\")} type=\"checkbox\" id=\"sexta\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"sabado\" className=\"filtroDivSemana w-full \" outline=\"true\">Sabado\n                                    <Input defaultChecked={sabado} onChange={() => this.setcheck(\"sabado\")} type=\"checkbox\" id=\"sabado\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\n                                <label htmlFor=\"domingo\" className=\"filtroDivSemana w-full \" outline=\"true\">Domingo\n                                    <Input defaultChecked={domingo} onChange={() => this.setcheck(\"domingo\")} type=\"checkbox\" id=\"domingo\" name=\"check\" className=\"checkSemana\" />\n                                </label>\n                            </div>\n\n                        </div>\n                        <div className=\"flexbox\">\n                            <div className=\"w-3\">\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(144,238,144)\" }}>\n                                    <div className=\"boxtitle\">Manhã</div>\n                                    <div className=\"boxItens\">\n                                        {\n                                            this.state.lista\n                                                .filter(res => {\n                                                    let boo = false;\n                                                    if (segunda) boo = true;\n                                                    if (terca) boo = true;\n                                                    if (quarta) boo = true;\n                                                    if (quinta) boo = true;\n                                                    if (sexta) boo = true;\n                                                    if (sabado) boo = true;\n                                                    if (domingo) boo = true;\n\n                                                    if (boo) {\n                                                        return (res.disponibilidade.segM && segunda) ||\n                                                            (res.disponibilidade.terM && terca) ||\n                                                            (res.disponibilidade.quaM && quarta) ||\n                                                            (res.disponibilidade.quiM && quinta) ||\n                                                            (res.disponibilidade.sexM && sexta) ||\n                                                            (res.disponibilidade.sabM && sabado) ||\n                                                            (res.disponibilidade.domM && domingo)\n                                                    }\n\n                                                    return res.disponibilidade.segM || res.disponibilidade.terM || res.disponibilidade.quaM\n                                                        || res.disponibilidade.quiM || res.disponibilidade.sexM\n                                                        || res.disponibilidade.sabM || res.disponibilidade.domM\n                                                }).map(res => {\n                                                    return (\n                                                        <div key={res.id} className=\"boxfields\">\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\n                                                            <div className=\"iconLabel\">\n                                                                <ModalDetalhe\n                                                                    professor={professor}\n                                                                    manha={manha}\n                                                                    tarde={tarde}\n                                                                    noite={noite}\n                                                                    modalidade={modalidade}\n                                                                    areaConhecimento={areaConhecimento}\n                                                                    unidadeCurricular={unidadeCurricular}\n                                                                    id={res.id}\n                                                                    redirect={this.professorInfo.bind(this)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-3\">\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(240,230,140)\" }}>\n                                    <div className=\"boxtitle\">Tarde</div>\n                                    <div className=\"boxItens\">\n                                        {\n                                            this.state.lista\n                                                .filter(res => {\n                                                    let boo = false;\n                                                    if (segunda) boo = true;\n                                                    if (terca) boo = true;\n                                                    if (quarta) boo = true;\n                                                    if (quinta) boo = true;\n                                                    if (sexta) boo = true;\n                                                    if (sabado) boo = true;\n                                                    if (domingo) boo = true;\n\n                                                    if (boo) {\n                                                        return (res.disponibilidade.segT && segunda) ||\n                                                            (res.disponibilidade.terT && terca) ||\n                                                            (res.disponibilidade.quaT && quarta) ||\n                                                            (res.disponibilidade.quiT && quinta) ||\n                                                            (res.disponibilidade.sexT && sexta) ||\n                                                            (res.disponibilidade.sabT && sabado) ||\n                                                            (res.disponibilidade.domT && domingo)\n                                                    }\n                                                    return res.disponibilidade.segT || res.disponibilidade.terT || res.disponibilidade.quaT\n                                                        || res.disponibilidade.quiT || res.disponibilidade.sexT\n                                                        || res.disponibilidade.sabT || res.disponibilidade.domT\n                                                }).map(res => {\n                                                    return (\n                                                        <div key={res.id} className=\"boxfields\">\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\n                                                            <div className=\"iconLabel\">\n                                                                <ModalDetalhe\n                                                                    professor={professor}\n                                                                    manha={manha}\n                                                                    tarde={tarde}\n                                                                    noite={noite}\n                                                                    modalidade={modalidade}\n                                                                    areaConhecimento={areaConhecimento}\n                                                                    unidadeCurricular={unidadeCurricular}\n                                                                    id={res.id}\n                                                                    redirect={this.professorInfo.bind(this)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-3\">\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(176,196,222)\" }}>\n                                    <div className=\"boxtitle\">Noite</div>\n                                    <div className=\"boxItens\">\n                                        {\n                                            this.state.lista\n                                                .filter(res => {\n                                                    let boo = false;\n                                                    if (segunda) boo = true;\n                                                    if (terca) boo = true;\n                                                    if (quarta) boo = true;\n                                                    if (quinta) boo = true;\n                                                    if (sexta) boo = true;\n                                                    if (sabado) boo = true;\n                                                    if (domingo) boo = true;\n\n                                                    if (boo) {\n                                                        return (res.disponibilidade.segN && segunda) ||\n                                                            (res.disponibilidade.terN && terca) ||\n                                                            (res.disponibilidade.quaN && quarta) ||\n                                                            (res.disponibilidade.quiN && quinta) ||\n                                                            (res.disponibilidade.sexN && sexta) ||\n                                                            (res.disponibilidade.sabN && sabado) ||\n                                                            (res.disponibilidade.domN && domingo)\n                                                    }\n                                                    return res.disponibilidade.segN || res.disponibilidade.terN || res.disponibilidade.quaN\n                                                        || res.disponibilidade.quiN || res.disponibilidade.sexN\n                                                        || res.disponibilidade.sabN || res.disponibilidade.domN\n                                                }).map(res => {\n                                                    return (\n                                                        <div key={res.id}className=\"boxfields\">\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\n                                                            <div className=\"iconLabel\">\n                                                                <ModalDetalhe\n                                                                    professor={professor}\n                                                                    manha={manha}\n                                                                    tarde={tarde}\n                                                                    noite={noite}\n                                                                    modalidade={modalidade}\n                                                                    areaConhecimento={areaConhecimento}\n                                                                    unidadeCurricular={unidadeCurricular}\n                                                                    id={res.id}\n                                                                    redirect={this.professorInfo.bind(this)}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n        </div >\n    };\n}\n\nexport default ConsultaDisponibilidade\n\n","import React from \"react\";\nimport { Row, Table } from \"reactstrap\";\nimport { POST, GET, Loading } from \"../componentes/Request\";\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisaPlus, ModalDetalhe } from \"../componentes/corpo\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\nimport Paginacao from \"../componentes/paginacao\";\n\nclass ConsultaCompetencia extends React.Component {\n    state = {\n        lista: [],\n        professor: {},\n        loading: false,\n        modal: false,\n        count: 0,\n        manha: \"\",\n        tarde: \"\",\n        noite: \"\",\n        pesquisa: \"\",\n        modalidade: [],\n        areaConhecimento: [],\n        unidadeCurricular: [],\n        valueModalidade: {},\n        valueAreaConhecimento: {},\n        valueUnidadeCurricular: {},\n        professorModalidade: [],\n        professorAreaconhecimento: [],\n        professorUnidadecurricular: [],\n        listaCorrente: [],\n        listaCache: [],\n        barraPesquisa: \"\",\n        toggle: false\n    }\n    token = this.props.user.token\n    touchModalidade = this.touchModalidade.bind(this);\n    touchAreaConhecimento = this.touchAreaConhecimento.bind(this);\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this);\n\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\n\n    touchModalidade(e, valueModalidade) {\n        this.setState({\n            valueModalidade: this.amountList(valueModalidade)\n        })\n        this.getListaProfessores()\n    }\n    touchAreaConhecimento(e, valueAreaConhecimento) {\n        this.setState({\n            valueAreaConhecimento: this.amountList(valueAreaConhecimento)\n        })\n        this.getListaProfessores()\n    }\n    touchUnidadeCurricular(e, valueUnidadeCurricular) {\n        this.setState({\n            valueUnidadeCurricular: this.amountList(valueUnidadeCurricular)\n        })\n        this.getListaProfessores()\n    }\n\n    amountList(listaAntiga) {\n\n        let listNova = [];\n        for (let i in listaAntiga) {\n            let o = {}\n            o.id = listaAntiga[i].id\n            o.status = 1\n            listNova.push(o)\n        }\n\n        return listNova\n    }\n\n    async professorInfo(id) {\n        await this.setState({\n            professor: this.pegaProfessor(id)\n        })\n        this.setState({ loading: true })\n        await this.getDisponibilidade()\n        await this.getProfessorModalidade()\n        await this.getProfessorAreaconhecimento()\n        await this.getProfessorUnidadecurricular()\n        this.setState({ loading: false })\n    }\n\n\n    getProfessorModalidade() {\n        let professorModalidade = this.state.professor.modalidade\n        let lista = []\n        for (let i = 0; i < professorModalidade.length; i++) {\n            lista.push(professorModalidade[i].nome)\n        }\n        this.setState({\n            professorModalidade: lista\n        })\n    }\n    getProfessorAreaconhecimento() {\n        let professorAreaconhecimento = this.state.professor.areaconhecimento\n        let lista = []\n        for (let i = 0; i < professorAreaconhecimento.length; i++) {\n            lista.push(professorAreaconhecimento[i].nome)\n        }\n        this.setState({\n            professorAreaconhecimento: lista\n        })\n    }\n    getProfessorUnidadecurricular() {\n        let professorUnidadecurricular = this.state.professor.unidadecurricular\n        let lista = []\n        for (let i = 0; i < professorUnidadecurricular.length; i++) {\n            let o = {}\n            o.id = professorUnidadecurricular[i].id\n            o.nome = professorUnidadecurricular[i].nome\n            o.descricao = professorUnidadecurricular[i].descricao\n            lista.push(o)\n        }\n        this.setState({\n            professorUnidadecurricular: lista\n        })\n    }\n\n    getDisponibilidade() {\n        let disp = this.state.professor.disponibilidade\n        let manha = \"\"\n        let tarde = \"\"\n        let noite = \"\"\n\n        if (disp.segM) manha += \"Segunda, \"\n        if (disp.terM) manha += \"Terça, \"\n        if (disp.quaM) manha += \"Quarta, \"\n        if (disp.quiM) manha += \"Quinta, \"\n        if (disp.sexM) manha += \"Sexta, \"\n        if (disp.sabM) manha += \"Sabado, \"\n        if (disp.domM) manha += \"Domingo, \"\n\n        if (disp.segT) tarde += \"Segunda, \"\n        if (disp.terT) tarde += \"Terça, \"\n        if (disp.quaT) tarde += \"Quarta, \"\n        if (disp.quiT) tarde += \"Quinta, \"\n        if (disp.sexT) tarde += \"Sexta, \"\n        if (disp.sabT) tarde += \"Sabado, \"\n        if (disp.domT) tarde += \"Domingo, \"\n\n        if (disp.segN) noite += \"Segunda, \"\n        if (disp.terN) noite += \"Terça, \"\n        if (disp.quaN) noite += \"Quarta, \"\n        if (disp.quiN) noite += \"Quinta, \"\n        if (disp.sexN) noite += \"Sexta, \"\n        if (disp.sabN) noite += \"Sabado, \"\n        if (disp.domN) noite += \"Domingo, \"\n\n        this.setState({\n            manha: manha.substr(0, manha.length - 2),\n            tarde: tarde.substr(0, tarde.length - 2),\n            noite: noite.substr(0, noite.length - 2),\n        })\n    }\n\n\n    pegaProfessor(id) {\n        for (let item of this.state.lista) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n    }\n\n    async getListaProfessores() {\n        this.setState({ loading: true })\n        let st = this.state\n        let o = {}\n        o.modalidade = this.newArray(st.valueModalidade)\n        o.areaconhecimento = this.newArray(st.valueAreaConhecimento)\n        o.unidadecurricular = this.newArray(st.valueUnidadeCurricular)\n        let response = await POST(\"competencia/listarItens/\" + this.token, o)\n        if (response !== null && response !== undefined) {\n            this.setState({\n                lista: response,\n                listaCache: response,\n            })\n        }\n\n        this.setState({ loading: false })\n    }\n\n    newArray(arrayVelho) {\n\n        let arrayNovo = []\n\n        for (var p in arrayVelho) {\n            arrayNovo.push(arrayVelho[p])\n        }\n\n        return arrayNovo\n    }\n\n    async getModalidade() {\n        await GET(\"modalidade/listar/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    modalidade: response,\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    modalidade: [],\n                })\n            }).finally(() => {\n                if (this.state.modalidade.length === 0) return false\n\n                let lista = [];\n                for (let i in this.state.modalidade) {\n                    let listaM = []\n                    listaM['nome'] = this.state.modalidade[i].nome\n                    listaM['id'] = this.state.modalidade[i].id\n\n                    lista.push(listaM)\n                }\n                this.setState({\n                    modalidade: lista\n                })\n            })\n\n    }\n\n    async getAreaconhecimento() {\n        await GET(\"areaConhecimento/listar/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    areaConhecimento: response,\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    areaConhecimento: [],\n                })\n            }).finally(() => {\n                if (this.state.areaConhecimento.length === 0) return false\n\n                let lista = [];\n                for (let i in this.state.areaConhecimento) {\n                    let listaM = []\n                    listaM['nome'] = this.state.areaConhecimento[i].nome\n                    listaM['id'] = this.state.areaConhecimento[i].id\n\n                    lista.push(listaM)\n                }\n                this.setState({\n                    areaConhecimento: lista\n                })\n            })\n\n    }\n\n    async getUnidadecurricular() {\n        await GET(\"unidadeCurricular/listar/\" + this.token)\n            .then(response => {\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\n                this.setState({\n                    unidadeCurricular: response,\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({\n                    unidadeCurricular: [],\n                })\n            }).finally(() => {\n                if (this.state.unidadeCurricular.length === 0) return false\n\n                let lista = [];\n                for (let i in this.state.unidadeCurricular) {\n                    let listaM = []\n                    listaM['nome'] = this.state.unidadeCurricular[i].nome\n                    listaM['id'] = this.state.unidadeCurricular[i].id\n\n                    lista.push(listaM)\n                }\n                this.setState({\n                    unidadeCurricular: lista\n                })\n            })\n\n    }\n\n    async componentDidMount() {\n        this.setState({ loading: true })\n        await this.getModalidade()\n        await this.getAreaconhecimento()\n        await this.getUnidadecurricular()\n        await this.getListaProfessores()\n        this.setState({ loading: false })\n    }\n\n    getRetornaListaCorrente(listaCorrente) {\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\n            this.setState({ listaCorrente });\n        }\n    }\n\n    async barraPesquisa(listaFiltrada) {\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\n            await this.setState({\n                lista: listaFiltrada\n            })\n        }\n    }\n\n    render() {\n        const { loading, professor, manha, tarde, noite,\n            valueModalidade, valueAreaConhecimento, valueUnidadeCurricular,\n            modalidade, areaConhecimento, unidadeCurricular,\n            professorModalidade, professorAreaconhecimento, professorUnidadecurricular } = this.state\n\n        return <div>\n            <Loading loading={loading} message='Carregando ...' />\n            <div>\n                <Cabecalho user={this.props.user} />\n            </div>\n            <div className=\"corpo\">\n                <Row>\n                    <Navegacao user={this.props.user} />\n                    <ContainerFade>\n                        <Row>\n                            <div className=\"titulo\">\n                                <h1>Consulta de competências</h1>\n                            </div>\n                        </Row>\n                        <div className=\"flexbox\">\n                            <div className=\"filtroInputDisponibilidade\">\n                                <Autocomplete\n                                    multiple\n                                    options={modalidade}\n                                    value={valueModalidade['modalidade']}\n                                    onChange={this.touchModalidade}\n                                    getOptionLabel={(option) => option.nome}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            variant=\"standard\"\n                                            label=\"Modalidades\"\n                                            placeholder=\"Escolha...\"\n                                        />\n                                    )}\n                                />\n                            </div>\n                            <div className=\"filtroInputDisponibilidade\">\n                                <Autocomplete\n                                    multiple\n                                    options={areaConhecimento}\n                                    value={valueAreaConhecimento['areaconhecimento']}\n                                    onChange={this.touchAreaConhecimento}\n                                    getOptionLabel={(option) => option.nome}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            variant=\"standard\"\n                                            label=\"Área de conhecimento\"\n                                            placeholder=\"Escolha...\"\n                                        />\n                                    )}\n                                />\n                            </div>\n                            <div className=\"filtroInputDisponibilidade\">\n                                <Autocomplete\n                                    multiple\n                                    options={unidadeCurricular}\n                                    value={valueUnidadeCurricular['unidadecurricular']}\n                                    onChange={this.touchUnidadeCurricular}\n                                    getOptionLabel={(option) => option.nome}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            variant=\"standard\"\n                                            label=\"Unidade de conhecimento\"\n                                            placeholder=\"Escolha...\"\n                                        />\n                                    )}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"div_tabela\">\n                            <div className=\"barra_menu\">\n                                <div className=\"w-50\">\n                                    <BarraDePesquisaPlus\n                                        funcPesquisa={this.barraPesquisa.bind(this)}\n                                        pesquisa={this.state.barraPesquisa}\n                                        attBarra={this.preencheBarraDePesquisa.bind(this)}\n                                        indicadores={[\"nome\", \"tipo\", \"email\"]}\n                                        lista={this.state.listaCache} />\n                                </div>\n                                <div className=\"w-50\">\n                                    <Paginacao\n                                        lista={this.state.lista}\n                                        total={this.state.lista.length}\n                                        retornaLista={this.getRetornaListaCorrente.bind(this)}\n                                    />\n                                </div>\n                            </div>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Professor</th>\n                                        <th>Matrícula</th>\n                                        <th>Tipo</th>\n                                        <th>E-mail</th>\n                                        <th>sobre</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.listaCorrente.map(o => {\n                                        return (\n                                            <tr key={o.id}>\n                                                <td>{o.id}</td>\n                                                <td>{o.nome}</td>\n                                                <td>{o.matricula}</td>\n                                                <td>{o.tipo}</td>\n                                                <td>{o.email}</td>\n                                                <td>\n                                                    <ModalDetalhe\n                                                        professor={professor}\n                                                        manha={manha}\n                                                        tarde={tarde}\n                                                        noite={noite}\n                                                        modalidade={professorModalidade}\n                                                        areaConhecimento={professorAreaconhecimento}\n                                                        unidadeCurricular={professorUnidadecurricular}\n                                                        destaque={valueUnidadeCurricular}\n                                                        id={o.id}\n                                                        redirect={this.professorInfo.bind(this)}\n                                                        onClick={() => this.setState({ toggle: !this.state.toggle })}\n                                                    />\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n                                    {\n                                        this.state.lista.length > 0 ? <BarraInicial exec={false} message='Não possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='Não possui itens para carregar.' colspan=\"5\" />\n                                    }\n\n                                </tbody>\n                            </Table>\n                        </div>\n                    </ContainerFade>\n                </Row>\n            </div>\n\n        </div >\n    };\n\n}\n\nexport default ConsultaCompetencia\n\n","import React from \"react\"\nimport { withRouter } from \"react-router-dom\";\n\nclass Logout  extends React.Component {\n    componentDidMount(){\n        this.props.logout()\n        this.props.history.push(\"/\")\n    }\n    render(){\n        return <></>\n    }\n}\n\nexport default withRouter(Logout)","import React from 'react'\nimport Login from '../telas/login';\nimport TelaInicial from '../telas/home';\nimport Modalidade from '../telas/modalidade';\nimport Professor from '../telas/professor';\nimport AreaConhecimento from '../telas/areaConhecimento';\nimport UnidadeCurricular from '../telas/unidadeCurricular';\nimport GerenciarEmailsProfessores from '../telas/gerenciarEmailsProfessores';\nimport Disponibilidade from '../telas/disponibilidade';\nimport Competencia from '../telas/gerenciarCompetencia';\nimport CadastroTelaInicial from '../telas/cadastroTelaInicial';\nimport RelacionamentoUnidadeCurricular from '../telas/componentes/relacionamentoUnidadeCurricular';\nimport RelacionamentoSegmentoTecnologico from '../telas/componentes/relacionamentoSegmentoTecnologico';\nimport EsqueciMinhaSenha from '../telas/esqueciMinhaSenha';\nimport FinalizarCadastro from '../telas/finalizarCadastro';\nimport { AlterarSenha, AlterarSenhaFail } from '../telas/alterarSenha';\nimport ConsultaDisponibilidade from '../telas/ConsultaDisponibilidade';\nimport ConsultaCompetencia from '../telas/ConsultaCompetencia';\nimport Logout from '../telas/logout';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nconst userContext = React.createContext({\n  id: '',\n  usuario: '',\n  permissao: '',\n  token: ''\n});\n\nclass Autenticacao extends React.Component {\n  state = {\n    id: \"\",\n    usuario: \"\",\n    permissao: \"\",\n    token: \"\",\n    inOut: false,\n    memoriaUrl: () => {\n      return Cookies.get(\"ultimaPagina\")\n    },\n  }\n\n  async componentDidMount() {\n    await this.setUserWithCookies()\n  }\n\n  async setId(id) {\n    await this.setState({ id })\n  }\n  async setUsuario(usuario) {\n    await this.setState({ usuario })\n  }\n  async setPermissao(permissao) {\n    await this.setState({ permissao })\n  }\n  async setToken(token) {\n    await this.setState({ token })\n  }\n\n  login() {\n    this.setState({\n      inOut: true\n    })\n  }\n\n  logout() {\n    this.setState({\n      id: \"\",\n      usuario: \"\",\n      permissao: \"\",\n      token: \"\",\n      inOut: false,\n    })\n    Cookies.remove(\"id\")\n    Cookies.remove(\"usuario\")\n    Cookies.remove(\"permissao\")\n    Cookies.remove(\"token\")\n    Cookies.remove(\"ultimaPagina\")\n  }\n\n  async setCookies() {\n    await Cookies.set(\"id\", this.state.id)\n    await Cookies.set(\"usuario\", this.state.usuario)\n    await Cookies.set(\"permissao\", this.state.permissao)\n    await Cookies.set(\"token\", this.state.token)\n  }\n\n  async setUserWithCookies() {\n    if (Cookies.get(\"id\") === undefined ||\n      Cookies.get(\"usuario\") === undefined ||\n      Cookies.get(\"permissao\") === undefined ||\n      Cookies.get(\"token\") === undefined)\n      return false;\n\n    await this.setState({\n      id: Cookies.get(\"id\"),\n      usuario: Cookies.get(\"usuario\"),\n      permissao: Cookies.get(\"permissao\"),\n      token: Cookies.get(\"token\"),\n      inOut: true,\n    })\n  }\n\n  render() {\n    const { inOut } = this.state\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {\n              (value) => (\n                <Router>\n                  <Switch>\n                    <Route path=\"/\" exact={true} >\n                      <Login\n                        user={value}\n                        setId={this.setId.bind(this)}\n                        setUsuario={this.setUsuario.bind(this)}\n                        setPermissao={this.setPermissao.bind(this)}\n                        setToken={this.setToken.bind(this)}\n                        login={this.login.bind(this)}\n                        setCookies={this.setCookies.bind(this)} />\n                    </Route>\n                    <Route path=\"/cadastroTelaInicial\">\n                      <CadastroTelaInicial user={value} />\n                    </Route>\n                    <Route path=\"/esqueciMinhaSenha\" >\n                      <EsqueciMinhaSenha user={value} />\n                    </Route>\n                    <Route path=\"/alterarSenha/:token\">\n                      <AlterarSenha user={value} />\n                    </Route>\n                    <Route path=\"/alterarSenha\">\n                      <AlterarSenhaFail user={value} />\n                    </Route>\n                    <Route path=\"/finalizarCadastro/:token\">\n                      <FinalizarCadastro user={value} />\n                    </Route>\n                    <Route path=\"/logout\">\n                      <Logout user={value} logout={this.logout.bind(this)} />\n                    </Route>\n                    <RotaPrivada inOut={inOut} path=\"/home\" >\n                      <TelaInicial user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/relacionamentoUnidadeCurricular/:id/:token\" >\n                      <RelacionamentoUnidadeCurricular user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/relacionamentoSegmentoTecnologico/:id/:token\" >\n                      <RelacionamentoSegmentoTecnologico user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/professor\">\n                      <Professor user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/modalidade\">\n                      <Modalidade user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/areaConhecimento\">\n                      <AreaConhecimento user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/unidadeCurricular\">\n                      <UnidadeCurricular user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/processo/gerenciaremailsprofessores\">\n                      <GerenciarEmailsProfessores user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/processo/disponibilidade\">\n                      <Disponibilidade user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/processo/competencia\">\n                      <Competencia user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/consulta/consultadisponibilidade\">\n                      <ConsultaDisponibilidade user={value} />\n                    </RotaPrivada>\n                    <RotaPrivada inOut={inOut} path=\"/consulta/consultacompetencia\">\n                      <ConsultaCompetencia user={value} />\n                    </RotaPrivada>\n                  </Switch>\n                </ Router>\n              )\n            }\n          </userContext.Consumer>\n        </userContext.Provider>\n      </>\n    );\n  }\n}\nexport default Autenticacao\nexport class RotaPrivada extends React.Component {\n  render() {\n    const { inOut, path } = this.props\n    return (\n      <Route path={path} >\n        {\n          inOut ? (this.props.children) :\n            (\n              <Redirect\n                to={{\n                  pathname: \"/\",\n                }}\n              />\n            )\n        }\n      </Route>\n\n    )\n  }\n}\n","\nimport React from 'react';\nimport Autenticacao from \"./componentes/Autenticacao\"\n\nexport default class App extends React.Component {\n    render() {\n        return <Autenticacao />\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport * as serviceWorker from './serviceWorker';\nimport './estilos.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/senai.a6602da5.png\";","module.exports = __webpack_public_path__ + \"static/media/sesi.c7e9bfce.png\";"],"sourceRoot":""}